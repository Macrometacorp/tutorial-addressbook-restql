import { C8jsResponse } from "./util/request";
import { Connection } from "./connection";
export declare class Route {
    private _connection;
    private _path;
    private _headers;
    constructor(connection: Connection, path?: string, headers?: Object);
    route(path: string, headers?: Object): Route;
    request({ method, path, headers, ...opts }: any): Promise<C8jsResponse>;
    private _request1;
    private _request2;
    delete(): Promise<C8jsResponse>;
    delete(path?: string): Promise<C8jsResponse>;
    delete(path?: string, qs?: Object): Promise<C8jsResponse>;
    delete(qs?: Object): Promise<C8jsResponse>;
    delete(qs?: Object, headers?: Object): Promise<C8jsResponse>;
    delete(path?: string, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    get(): Promise<C8jsResponse>;
    get(path?: string): Promise<C8jsResponse>;
    get(path?: string, qs?: Object): Promise<C8jsResponse>;
    get(path?: string, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    get(qs?: Object): Promise<C8jsResponse>;
    get(qs?: Object, headers?: Object): Promise<C8jsResponse>;
    head(): Promise<C8jsResponse>;
    head(path?: string): Promise<C8jsResponse>;
    head(path?: string, qs?: Object): Promise<C8jsResponse>;
    head(path?: string, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    head(qs?: Object): Promise<C8jsResponse>;
    head(qs?: Object, headers?: Object): Promise<C8jsResponse>;
    patch(): Promise<C8jsResponse>;
    patch(path?: string): Promise<C8jsResponse>;
    patch(path?: string, body?: any): Promise<C8jsResponse>;
    patch(path?: string, body?: any, qs?: Object): Promise<C8jsResponse>;
    patch(body?: any): Promise<C8jsResponse>;
    patch(body?: any, qs?: Object): Promise<C8jsResponse>;
    patch(body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    patch(path?: string, body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    post(): Promise<C8jsResponse>;
    post(path?: string): Promise<C8jsResponse>;
    post(path?: string, body?: any): Promise<C8jsResponse>;
    post(path?: string, body?: any, qs?: Object): Promise<C8jsResponse>;
    post(body?: any): Promise<C8jsResponse>;
    post(body?: any, qs?: Object): Promise<C8jsResponse>;
    post(body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    post(path?: string, body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    put(): Promise<C8jsResponse>;
    put(path?: string): Promise<C8jsResponse>;
    put(path?: string, body?: any): Promise<C8jsResponse>;
    put(path?: string, body?: any, qs?: Object): Promise<C8jsResponse>;
    put(body?: any): Promise<C8jsResponse>;
    put(body?: any, qs?: Object): Promise<C8jsResponse>;
    put(body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;
    put(path?: string, body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;
}
//# sourceMappingURL=route.d.ts.map