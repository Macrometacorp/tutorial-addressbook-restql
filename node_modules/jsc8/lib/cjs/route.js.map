{"version":3,"file":"route.js","sourceRoot":"","sources":["../../src/route.ts"],"names":[],"mappings":"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","sourcesContent":["import { C8jsResponse } from \"./util/request\";\nimport { Connection } from \"./connection\";\n\nexport class Route {\n  private _connection: Connection;\n  private _path: string;\n  private _headers: Object;\n\n  constructor(connection: Connection, path: string = \"\", headers: Object = {}) {\n    if (!path) path = \"\";\n    else if (path.charAt(0) !== \"/\") path = `/${path}`;\n    this._connection = connection;\n    this._path = path;\n    this._headers = headers;\n  }\n\n  route(path: string, headers?: Object) {\n    if (!path) path = \"\";\n    else if (path.charAt(0) !== \"/\") path = `/${path}`;\n    return new Route(this._connection, this._path + path, {\n      ...this._headers,\n      ...headers\n    });\n  }\n\n  request({ method, path, headers = {}, ...opts }: any) {\n    if (!path) opts.path = \"\";\n    else if (this._path && path.charAt(0) !== \"/\") opts.path = `/${path}`;\n    else opts.path = path;\n    opts.basePath = this._path;\n    opts.headers = { ...this._headers, ...headers };\n    opts.method = method ? method.toUpperCase() : \"GET\";\n    return this._connection.request(opts);\n  }\n\n  private _request1(method: string, ...args: any[]) {\n    let path: string = \"\";\n    let qs: Object | undefined;\n    let headers: Object | undefined;\n    if (args[0] === undefined || typeof args[0] === \"string\") {\n      path = args.shift();\n    }\n    if (args[0] === undefined || typeof args[0] === \"object\") {\n      qs = args.shift();\n    }\n    if (args[0] === undefined || typeof args[0] === \"object\") {\n      headers = args.shift();\n    }\n    return this.request({ method, path, qs, headers });\n  }\n\n  private _request2(method: string, ...args: any[]) {\n    let path: string = \"\";\n    let body: any = undefined;\n    let qs: Object | undefined;\n    let headers: Object | undefined;\n    if (args[0] === undefined || typeof args[0] === \"string\") {\n      path = args.shift();\n    }\n    body = args.shift();\n    if (args[0] === undefined || typeof args[0] === \"object\") {\n      qs = args.shift();\n    }\n    if (args[0] === undefined || typeof args[0] === \"object\") {\n      headers = args.shift();\n    }\n    return this.request({ method, path, body, qs, headers });\n  }\n\n  delete(): Promise<C8jsResponse>;\n  delete(path?: string): Promise<C8jsResponse>;\n  delete(path?: string, qs?: Object): Promise<C8jsResponse>;\n  delete(qs?: Object): Promise<C8jsResponse>;\n  delete(qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  delete(\n    path?: string,\n    qs?: Object,\n    headers?: Object\n  ): Promise<C8jsResponse>;\n  delete(...args: any[]): Promise<C8jsResponse> {\n    return this._request1(\"DELETE\", ...args);\n  }\n\n  get(): Promise<C8jsResponse>;\n  get(path?: string): Promise<C8jsResponse>;\n  get(path?: string, qs?: Object): Promise<C8jsResponse>;\n  get(path?: string, qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  get(qs?: Object): Promise<C8jsResponse>;\n  get(qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  get(...args: any[]): Promise<C8jsResponse> {\n    return this._request1(\"GET\", ...args);\n  }\n\n  head(): Promise<C8jsResponse>;\n  head(path?: string): Promise<C8jsResponse>;\n  head(path?: string, qs?: Object): Promise<C8jsResponse>;\n  head(path?: string, qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  head(qs?: Object): Promise<C8jsResponse>;\n  head(qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  head(...args: any[]): Promise<C8jsResponse> {\n    return this._request1(\"HEAD\", ...args);\n  }\n\n  patch(): Promise<C8jsResponse>;\n  patch(path?: string): Promise<C8jsResponse>;\n  patch(path?: string, body?: any): Promise<C8jsResponse>;\n  patch(path?: string, body?: any, qs?: Object): Promise<C8jsResponse>;\n  patch(body?: any): Promise<C8jsResponse>;\n  patch(body?: any, qs?: Object): Promise<C8jsResponse>;\n  patch(body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  patch(\n    path?: string,\n    body?: any,\n    qs?: Object,\n    headers?: Object\n  ): Promise<C8jsResponse>;\n  patch(...args: any[]): Promise<C8jsResponse> {\n    return this._request2(\"PATCH\", ...args);\n  }\n\n  post(): Promise<C8jsResponse>;\n  post(path?: string): Promise<C8jsResponse>;\n  post(path?: string, body?: any): Promise<C8jsResponse>;\n  post(path?: string, body?: any, qs?: Object): Promise<C8jsResponse>;\n  post(body?: any): Promise<C8jsResponse>;\n  post(body?: any, qs?: Object): Promise<C8jsResponse>;\n  post(body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  post(\n    path?: string,\n    body?: any,\n    qs?: Object,\n    headers?: Object\n  ): Promise<C8jsResponse>;\n  post(...args: any[]): Promise<C8jsResponse> {\n    return this._request2(\"POST\", ...args);\n  }\n\n  put(): Promise<C8jsResponse>;\n  put(path?: string): Promise<C8jsResponse>;\n  put(path?: string, body?: any): Promise<C8jsResponse>;\n  put(path?: string, body?: any, qs?: Object): Promise<C8jsResponse>;\n  put(body?: any): Promise<C8jsResponse>;\n  put(body?: any, qs?: Object): Promise<C8jsResponse>;\n  put(body?: any, qs?: Object, headers?: Object): Promise<C8jsResponse>;\n  put(\n    path?: string,\n    body?: any,\n    qs?: Object,\n    headers?: Object\n  ): Promise<C8jsResponse>;\n  put(...args: any[]): Promise<C8jsResponse> {\n    return this._request2(\"PUT\", ...args);\n  }\n}\n"]}