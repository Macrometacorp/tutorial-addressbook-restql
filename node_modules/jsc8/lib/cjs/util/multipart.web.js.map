{"version":3,"file":"multipart.web.js","sourceRoot":"","sources":["../../../src/util/multipart.web.ts"],"names":[],"mappings":";;AAIA,gBAAuB,MAAc,EAAE,QAAmC;IACxE,IAAI,IAAI,CAAC;IACT,IAAI;QACF,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QACtB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,KAAK,KAAK,SAAS;gBAAE,SAAS;YAClC,IACE,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC;gBACxB,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,UAAU,CAAC,EAC1D;gBACA,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACzB;KACF;IAAC,OAAO,CAAC,EAAE;QACV,QAAQ,CAAC,CAAC,CAAC,CAAC;QACZ,OAAO;KACR;IACD,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AACjC,CAAC;AApBD,wBAoBC","sourcesContent":["import { Fields, MultipartRequest } from \"./multipart\";\n\nimport { Errback } from \"./types\";\n\nexport function toForm(fields: Fields, callback: Errback<MultipartRequest>) {\n  let form;\n  try {\n    form = new FormData();\n    for (const key of Object.keys(fields)) {\n      let value = fields[key];\n      if (value === undefined) continue;\n      if (\n        !(value instanceof Blob) &&\n        (typeof value === \"object\" || typeof value === \"function\")\n      ) {\n        value = JSON.stringify(value);\n      }\n      form.append(key, value);\n    }\n  } catch (e) {\n    callback(e);\n    return;\n  }\n  callback(null, { body: form });\n}\n"]}