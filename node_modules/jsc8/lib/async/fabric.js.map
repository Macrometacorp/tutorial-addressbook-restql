{"version":3,"file":"fabric.js","sourceRoot":"","sources":["../../src/fabric.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  C8QLLiteral,\n  C8QLQuery,\n  isC8QLLiteral,\n  isC8QLQuery\n} from \"./c8ql-query\";\nimport {\n  C8Collection,\n  constructCollection,\n  DocumentCollection,\n  EdgeCollection,\n  isC8Collection\n} from \"./collection\";\nimport { Config, Connection } from \"./connection\";\nimport { ArrayCursor } from \"./cursor\";\nimport { isC8Error } from \"./error\";\nimport { Graph } from \"./graph\";\nimport { Tenant } from \"./tenant\";\nimport { Stream } from \"./stream\";\nimport { Route } from \"./route\";\nimport { btoa } from \"./util/btoa\";\nimport User from \"./user\";\n\nfunction colToString(collection: string | C8Collection): string {\n  if (isC8Collection(collection)) {\n    return String(collection.name);\n  } else return String(collection);\n}\n\nexport type TenantListObj = {\n  tenant: string;\n  active: boolean;\n  extra: any;\n};\n\nexport type TenantList = {\n  error: boolean;\n  code: number;\n  result: TenantListObj[];\n};\n\nexport type EdgeLocation = {\n  _id: string;\n  _key: string;\n  _rev: string;\n  host: string;\n  local: boolean;\n  name: string;\n  port: number;\n  spot_region: boolean;\n  status: 0 | 1;\n  tags: {\n    city: string;\n    countrycode: string;\n    countryname: string;\n    latitude: string;\n    longitude: string;\n    role: string;\n    url: string;\n  };\n};\n\nexport type TransactionCollections =\n  | string\n  | C8Collection\n  | (string | C8Collection)[]\n  | {\n    write?: string | C8Collection | (string | C8Collection)[];\n    read?: string | C8Collection | (string | C8Collection)[];\n  };\n\nexport type TransactionOptions = {\n  lockTimeout?: number;\n  maxTransactionSize?: number;\n  intermediateCommitCount?: number;\n  intermediateCommitSize?: number;\n  waitForSync?: boolean;\n};\n\nexport type ServiceOptions = {\n  [key: string]: any;\n  configuration?: { [key: string]: any };\n  dependencies?: { [key: string]: any };\n};\n\nexport interface CreateFabricUser {\n  username: string;\n  passwd?: string;\n  active?: boolean;\n  extra?: { [key: string]: any };\n}\n\nexport interface CreateFabricOptions {\n  dcList: string; //comma separated string, can also be \"\"\n  spotDc?: string;\n}\n\nconst FABRIC_NOT_FOUND = 1228;\nexport class Fabric {\n  private _connection: Connection;\n\n  constructor(config?: Config) {\n    this._connection = new Connection(config);\n  }\n\n  get name(): string | null {\n    return this._connection.getFabricName() || null;\n  }\n\n  route(path?: string, headers?: Object): Route {\n    return new Route(this._connection, path, headers);\n  }\n\n  \n\n  close(): void {\n    this._connection.close();\n  }\n\n  // Fabric manipulation\n\n  useFabric(fabricName: string): this {\n    this._connection.setFabricName(fabricName);\n    return this;\n  }\n\n  useBearerAuth(token: string): this {\n    this._connection.setHeader(\"authorization\", `Bearer ${token}`);\n    return this;\n  }\n\n  useBasicAuth(\n    username: string,\n    password: string\n  ): this {\n    this._connection.setHeader(\n      \"authorization\",\n      `Basic ${btoa(`${username}:${password}`)}`\n    );\n    return this;\n  }\n\n  get() {\n    return this._connection.request(\n      { path: \"/database/current\" },\n      res => res.body.result\n    );\n  }\n\n  exists(): Promise<boolean> {\n    return this.get().then(\n      () => true,\n      err => {\n        if (isC8Error(err) && err.errorNum === FABRIC_NOT_FOUND) {\n          return false;\n        }\n        throw err;\n      }\n    );\n  }\n  createFabric(\n    fabricName: string,\n    users: CreateFabricUser[] | undefined,\n    options: CreateFabricOptions\n  ): Promise<any> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/database\",\n        body: { users: users || [], name: fabricName, options }\n      },\n      res => res.body\n    );\n  }\n\n  listFabrics() {\n    return this._connection.request(\n      { path: \"/database\" },\n      res => res.body.result\n    );\n  }\n\n  listUserFabrics() {\n    return this._connection.request(\n      { path: \"/database/user\" },\n      res => res.body.result\n    );\n  }\n\n  dropFabric(fabricName: string) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/database/${fabricName}`\n      },\n      res => res.body\n    );\n  }\n\n  login(\n    tenant: string,\n    username: string,\n    password: string\n  ): Promise<string> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_open/auth\",\n        body: { username, password, tenant },\n        absolutePath: true\n      },\n      res => {\n        this.useBearerAuth(res.body.jwt);\n        return res.body.jwt;\n      }\n    );\n  }\n\n  updateFabricSpotRegion(\n    tenantName: string,\n    fabricName: string,\n    datacenter: string = \"\"\n  ) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: `_tenant/${tenantName}/_fabric/${fabricName}/database/${datacenter}`,\n        absolutePath: true\n      },\n      res => res.body\n    );\n  }\n\n  // Collection manipulation\n\n  collection(collectionName: string): DocumentCollection {\n    return new DocumentCollection(this._connection, collectionName);\n  }\n\n  edgeCollection(collectionName: string): EdgeCollection {\n    return new EdgeCollection(this._connection, collectionName);\n  }\n\n  listCollections(excludeSystem: boolean = true) {\n    return this._connection.request(\n      {\n        path: \"/collection\",\n        qs: { excludeSystem }\n      },\n      res =>\n        this._connection.c8Major <= 2 ? res.body.collections : res.body.result\n    );\n  }\n\n  async collections(excludeSystem: boolean = true): Promise<C8Collection[]> {\n    const collections = await this.listCollections(excludeSystem);\n    return collections.map((data: any) =>\n      constructCollection(this._connection, data)\n    );\n  }\n\n  async truncate(excludeSystem: boolean = true) {\n    const collections = await this.listCollections(excludeSystem);\n    return await Promise.all(\n      collections.map((data: any) =>\n        this._connection.request(\n          {\n            method: \"PUT\",\n            path: `/collection/${data.name}/truncate`\n          },\n          res => res.body\n        )\n      )\n    );\n  }\n\n  // Graph manipulation\n\n  graph(graphName: string): Graph {\n    return new Graph(this._connection, graphName);\n  }\n\n  listGraphs() {\n    return this._connection.request(\n      { path: \"/_api/graph\" },\n      res => res.body.graphs\n    );\n  }\n\n  async graphs(): Promise<Graph[]> {\n    const graphs = await this.listGraphs();\n    return graphs.map((data: any) => this.graph(data._key));\n  }\n\n  // Queries\n\n  transaction(\n    collections: TransactionCollections,\n    action: string\n  ): Promise<any>;\n  transaction(\n    collections: TransactionCollections,\n    action: string,\n    params?: Object\n  ): Promise<any>;\n  transaction(\n    collections: TransactionCollections,\n    action: string,\n    params?: Object,\n    options?: TransactionOptions\n  ): Promise<any>;\n  transaction(\n    collections: TransactionCollections,\n    action: string,\n    lockTimeout?: number\n  ): Promise<any>;\n  transaction(\n    collections: TransactionCollections,\n    action: string,\n    params?: Object,\n    lockTimeout?: number\n  ): Promise<any>;\n  transaction(\n    collections: TransactionCollections,\n    action: string,\n    params?: Object | number,\n    options?: TransactionOptions | number\n  ): Promise<any> {\n    if (typeof params === \"number\") {\n      options = params;\n      params = undefined;\n    }\n    if (typeof options === \"number\") {\n      options = { lockTimeout: options };\n    }\n    if (typeof collections === \"string\") {\n      collections = { write: [collections] };\n    } else if (Array.isArray(collections)) {\n      collections = { write: collections.map(colToString) };\n    } else if (isC8Collection(collections)) {\n      collections = { write: colToString(collections) };\n    } else if (collections && typeof collections === \"object\") {\n      collections = { ...collections };\n      if (collections.read) {\n        if (!Array.isArray(collections.read)) {\n          collections.read = colToString(collections.read);\n        } else collections.read = collections.read.map(colToString);\n      }\n      if (collections.write) {\n        if (!Array.isArray(collections.write)) {\n          collections.write = colToString(collections.write);\n        } else collections.write = collections.write.map(colToString);\n      }\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/transaction\",\n        body: {\n          collections,\n          action,\n          params,\n          ...options\n        }\n      },\n      res => res.body.result\n    );\n  }\n\n  query(query: string | C8QLQuery | C8QLLiteral): Promise<ArrayCursor>;\n  query(query: C8QLQuery, opts?: any): Promise<ArrayCursor>;\n  query(\n    query: string | C8QLLiteral,\n    bindVars?: any,\n    opts?: any\n  ): Promise<ArrayCursor>;\n  query(\n    query: string | C8QLQuery | C8QLLiteral,\n    bindVars?: any,\n    opts?: any\n  ): Promise<ArrayCursor> {\n    if (isC8QLQuery(query)) {\n      opts = bindVars;\n      bindVars = query.bindVars;\n      query = query.query;\n    } else if (isC8QLLiteral(query)) {\n      query = query.toC8QL();\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/cursor\",\n        body: { ...opts, query, bindVars }\n      },\n      res => new ArrayCursor(this._connection, res.body, res.host)\n    );\n  }\n\n  validateQuery(query: string) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/query\",\n        body: { query }\n      },\n      res => res.body\n    );\n  }\n\n  explainQuery(explainQueryObj: C8QLQuery) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/query/explain\",\n        body: { ...explainQueryObj }\n      },\n      res => res.body\n    );\n  }\n\n  getCurrentQueries() {\n    return this._connection.request(\n      {\n        path: \"/query/current\"\n      },\n      res => res.body\n    );\n  }\n\n  clearSlowQueries() {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: \"/query/slow\"\n      },\n      res => res.body\n    );\n  }\n\n  getSlowQueries() {\n    return this._connection.request(\n      {\n        path: \"/query/slow\"\n      },\n      res => res.body\n    );\n  }\n\n  terminateRunningQuery(queryId: string) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/query/${queryId}`\n      },\n      res => res.body\n    );\n  }\n\n  // Function management\n\n  listFunctions() {\n    return this._connection.request({ path: \"/c8qlfunction\" }, res => res.body);\n  }\n\n  createFunction(name: string, code: string, isDeterministic?: boolean) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/c8qlfunction\",\n        body: { name, code, isDeterministic }\n      },\n      res => res.body\n    );\n  }\n\n  dropFunction(name: string, group?: boolean) {\n    const path =\n      typeof group === \"boolean\"\n        ? `/c8qlfunction/${name}?group=${group}`\n        : `/c8qlfunction/${name}`;\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path\n      },\n      res => res.body\n    );\n  }\n\n  version(details: boolean = false): Promise<any> {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: `/_tenant/${this._connection.getTenantName()}/_admin/version`,\n        absolutePath: true,\n        qs: { details }\n      },\n      res => res.body\n    );\n  }\n\n  // Tenant\n\n  useTenant(tenantName: string): this {\n    this._connection.setTenantName(tenantName);\n    return this;\n  }\n\n  tenant(tenantName: string): Tenant {\n    return new Tenant(this._connection, tenantName);\n  }\n\n  listTenants() {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: \"/tenants\",\n        absolutePath: true\n      },\n      res => res.body\n    );\n  }\n\n  //Stream\n\n  stream(streamName: string, local: boolean): Stream {\n    return new Stream(this._connection, streamName, local);\n  }\n\n  getStreams() {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: \"/streams\"\n      },\n      res => res.body\n    );\n  }\n\n  listPersistentStreams(local: boolean = false) {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: `/streams/persistent`,\n        qs: `local=${local}`\n      },\n      res => res.body\n    );\n  }\n\n  clearBacklog() {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/streams/clearbacklog\"\n      },\n      res => res.body\n    );\n  }\n\n  clearSubscriptionBacklog(subscription: string) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: `/streams/clearbacklog/${subscription}`\n      },\n      res => res.body\n    );\n  }\n\n  unsubscribe(subscription: string) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: `/streams/unsubscribe/${subscription}`\n      },\n      res => res.body\n    );\n  }\n\n  //edge locations\n\n  getAllEdgeLocations() {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: \"/datacenter/all\",\n        absolutePath: true\n      },\n      res => res.body\n    );\n  }\n\n  getLocalEdgeLocation() {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: \"/datacenter/local\",\n        absolutePath: true\n      },\n      res => res.body\n    );\n  }\n\n  changeEdgeLocationSpotStatus(dcName: string, status: boolean) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: `/datacenter/${dcName}/${status}`,\n        absolutePath: true\n      },\n      res => res.body\n    );\n  }\n\n  //user\n\n  user(user: string): User {\n    return new User(this._connection, user);\n  }\n\n  getAllUsers() {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: `/_admin/user`\n      },\n      res => res.body\n    );\n  }\n\n  //User Queries / RESTQL\n\n  listSavedQueries() {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: `/restql/user`\n      },\n      res => res.body\n    );\n\n  }\n\n  saveQuery(name: string, parameter: any = {}, value: string) {\n    try{\n    \n    if (name.includes(\" \")) throw(\"Spaces are not allowed in query name\")\n      \n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/restql\",\n        body: {\n          \"query\": {\n            \"name\": name,\n            \"parameter\": parameter,\n            \"value\": value\n          }\n        }\n      },\n      res => res.body\n    );\n    }\n    catch(err){\n      return err\n    }\n\n  }\n\n  executeSavedQuery(queryName: string, bindVars: any = {}) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: `/restql/execute/${queryName}`,\n        body: {\n          \"bindVars\": bindVars\n        }\n      },\n      res => res.body\n    );\n\n  }\n\n  updateSavedQuery(queryName: string, parameter: any = {}, value: string) {\n    return this._connection.request(\n      {\n        method: \"PUT\",\n        path: `/restql/${queryName}`,\n        body: {\n          \"query\": {\n            \"name\": name,\n            \"parameter\": parameter,\n            \"value\": value\n          }\n        }\n      },\n      res => res.body\n    );\n  }\n\n  deleteSavedQuery(queryName: string) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/restql/${queryName}`\n      },\n      res => res.body\n    );\n\n  }\n\n  createRestqlCursor(query: string, bindVars: any = {} ){\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: `/restql/dynamic`,\n        body: {\n          \"bindVars\": [\n            bindVars\n          ],\n          \"cache\": true,\n          \"count\": true,\n          \"options\": {\n            \"profile\": true\n          },\n          \"query\": query\n        }\n        \n      },\n      res => res.body\n    );\n\n  }\n\n}\n"]}