{"ast":null,"code":"import _objectSpread from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/src/App.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport c8dbLogo from \"./c8db-edition-edited.svg\";\nimport spinner from './circle_spinner.gif';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Config from './Config';\nimport { getValidDataArray, deleteUtil, addOrUpdateUtil, getBaseUrl, getWsUrl, getProducerUrl, makeRegionData } from \"./util\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleFormChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    console.log(\"------------->\".concat(Object.keys(Config)));\n    _this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: true,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: ''\n    };\n    _this.onFabPress = _this.onFabPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormChange = _this.handleFormChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSavePressed = _this.onSavePressed.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.resetModalData = _this.resetModalData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextInputFocus = _this.onTextInputFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSocketMessageReceived = _this.onSocketMessageReceived.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.connection = undefined;\n    _this.producer = undefined;\n    _this.jwtToken = undefined;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.connection.close();\n      this.producer.close();\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      var data = {\n        tenant: 'demo',\n        username: 'demouser',\n        password: 'demouser'\n      };\n      var url = \"https://\".concat(this.state.selectedRegionUrl, \"/_tenant/_mm/_fabric/_system/_open/auth\");\n      $.ajax({\n        url: url,\n        method: 'POST',\n        data: JSON.stringify(data),\n        dataType: 'json',\n        success: function success(data) {\n          _this2.jwtToken = data.jwt;\n\n          _this2.ajaxSetup();\n\n          _this2.initWebSocket();\n\n          _this2.fetchData();\n        },\n        error: function error() {\n          return _this2.handleSnackbar(\"Auth failed.\");\n        }\n      });\n    }\n  }, {\n    key: \"ajaxSetup\",\n    value: function ajaxSetup() {\n      $.ajaxSetup({\n        headers: {\n          Authorization: \"bearer \".concat(this.jwtToken)\n        }\n      });\n    }\n  }, {\n    key: \"initWebSocket\",\n    value: function initWebSocket() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          wsUrl = _this$state.wsUrl,\n          producerUrl = _this$state.producerUrl;\n      this.connection = new WebSocket(wsUrl);\n      this.connection.onmessage = this.onSocketMessageReceived;\n\n      this.connection.onopen = function () {\n        return console.log(\"WS connection established\");\n      };\n\n      this.connection.onerror = function () {\n        return console.log(\"Failed to establish WS connection\");\n      };\n\n      this.connection.onclose = function () {\n        return console.log(\"Closing WS connection\");\n      };\n\n      this.producer = new WebSocket(producerUrl);\n\n      this.producer.onopen = function () {\n        setInterval(function () {\n          _this3.producer.send(JSON.stringify({\n            'payload': 'noop'\n          }));\n        }, 30000);\n      };\n    }\n  }, {\n    key: \"deleteData\",\n    value: function deleteData(key) {\n      this.setState({\n        data: deleteUtil(key, this.state.data)\n      });\n    }\n  }, {\n    key: \"addOrUpdateData\",\n    value: function addOrUpdateData(payload) {\n      this.setState({\n        data: addOrUpdateUtil(payload, this.state.data)\n      });\n    }\n  }, {\n    key: \"onSocketMessageReceived\",\n    value: function onSocketMessageReceived(message) {\n      var receiveMsg = JSON.parse(message.data);\n      var ackMsg = {\n        \"messageId\": receiveMsg.messageId\n      };\n      this.connection.send(JSON.stringify(ackMsg));\n\n      if (receiveMsg.payload !== 'noop') {\n        var payload = JSON.parse(atob(receiveMsg.payload));\n        payload._delete ? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n      }\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(isDialog) {\n      var self = this;\n      var url = this.state.baseUrl;\n      this.setState({\n        isLoading: true\n      }, function () {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url: url,\n          data: '{\"action\":\"read\"}',\n          success: function success(data) {\n            self.resetModalData();\n            self.setState({\n              isLoading: false,\n              data: getValidDataArray(data)\n            });\n          },\n          error: function error(data) {\n            if (isDialog) {\n              self.resetModalData();\n            }\n\n            self.setState({\n              isLoading: false\n            });\n            self.handleSnackbar(\"Could not fetch data\");\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"onFabPress\",\n    value: function onFabPress() {\n      this.setState({\n        shouldShowModal: true\n      });\n    }\n  }, {\n    key: \"resetModalData\",\n    value: function resetModalData() {\n      this.setState({\n        lastEditElem: undefined,\n        shouldShowModal: false,\n        isEdit: false,\n        firstName: '',\n        lastName: '',\n        emailAddress: '',\n        firstNameHasError: false,\n        lastNameHasError: false,\n        emailAddressHasError: false\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          emailAddress = _this$state2.emailAddress;\n      var validationObject = {};\n\n      if (!this.state.isEdit) {\n        if (!firstName.trim()) {\n          validationObject.firstNameHasError = true;\n        }\n\n        if (!lastName.trim()) {\n          validationObject.lastNameHasError = true;\n        }\n\n        if (!emailAddress.trim()) {\n          validationObject.emailAddressHasError = true;\n        }\n      } else {\n        if (!this.state.lastEditElem.email.trim()) {\n          validationObject.emailAddressHasError = true;\n        }\n      }\n\n      return validationObject;\n    }\n  }, {\n    key: \"onSavePressed\",\n    value: function onSavePressed() {\n      var self = this;\n      var url = this.state.baseUrl;\n      var validationObject = this.validate();\n\n      if (Object.keys(validationObject).length === 0) {\n        var snackbarTextSuccess = 'Contact details added successfully';\n        var snackbarTextFail = 'Contact details could not be added';\n        var postData = {\n          \"action\": \"create\",\n          \"data\": {\n            \"firstname\": this.state.firstName,\n            \"lastname\": this.state.lastName,\n            \"email\": this.state.emailAddress\n          }\n        };\n\n        if (this.state.isEdit) {\n          postData = {\n            \"action\": \"update\",\n            \"data\": {\n              \"key\": this.state.lastEditElem.key,\n              \"firstname\": this.state.lastEditElem.firstname,\n              \"lastname\": this.state.lastEditElem.lastname,\n              \"email\": this.state.lastEditElem.email\n            }\n          };\n          snackbarTextSuccess = 'Contact details updated successfully';\n          snackbarTextFail = 'Contact details could not be updated';\n        }\n\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url: url,\n          data: JSON.stringify(postData),\n          success: function success() {\n            self.handleSnackbar(snackbarTextSuccess);\n            self.resetModalData();\n          },\n          error: function error(data) {\n            self.handleSnackbar(snackbarTextFail);\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      } else {\n        //show error\n        this.setState(_objectSpread({}, validationObject));\n      }\n    }\n  }, {\n    key: \"onTextInputFocus\",\n    value: function onTextInputFocus(name) {\n      if (this.state[\"\".concat(name, \"HasError\")]) {\n        this.setState(_defineProperty({}, \"\".concat(name, \"HasError\"), false));\n      }\n    }\n  }, {\n    key: \"onEditPressed\",\n    value: function onEditPressed(element) {\n      if (element) {\n        //show edit modal\n        this.setState({\n          shouldShowModal: true,\n          isEdit: true,\n          lastEditElem: element\n        });\n      }\n    }\n  }, {\n    key: \"onRemovePressed\",\n    value: function onRemovePressed(element) {\n      var self = this;\n      var url = this.state.baseUrl;\n\n      if (element) {\n        this.setState({\n          lastEditElem: element\n        }, function () {\n          $.ajax({\n            type: \"POST\",\n            contentType: 'text/plain',\n            processData: false,\n            cache: false,\n            url: url,\n            data: JSON.stringify({\n              \"action\": \"delete\",\n              \"data\": {\n                \"key\": element.key\n              }\n            }),\n            success: function success() {\n              self.handleSnackbar(\"Contact details removed successfully\");\n              self.resetModalData();\n            },\n            error: function error(data) {\n              self.handleSnackbar(\"Contact details could not be removed\");\n              self.resetModalData();\n              console.log('Error:', data);\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSnackbar\",\n    value: function handleSnackbar(snackbarText) {\n      var _this4 = this;\n\n      this.setState({\n        showSnackbar: true,\n        snackbarText: snackbarText\n      }, function () {\n        setTimeout(function () {\n          _this4.setState({\n            showSnackbar: false,\n            snackbarText: ''\n          });\n        }, 2000);\n      });\n    }\n  }, {\n    key: \"renderDialogContent\",\n    value: function renderDialogContent() {\n      var _this5 = this;\n\n      var _ref = this.state.lastEditElem || {},\n          firstname = _ref.firstname,\n          lastname = _ref.lastname,\n          email = _ref.email;\n\n      var dialogContent = React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'), React.createElement(TextField, {\n        onFocus: function onFocus() {\n          return _this5.onTextInputFocus(\"firstName\");\n        },\n        required: !this.state.isEdit,\n        error: this.state.firstNameHasError,\n        style: {\n          display: 'block'\n        },\n        label: \"First Name\",\n        value: this.state.isEdit ? firstname : this.state.firstName,\n        onChange: function onChange(event) {\n          if (_this5.state.isEdit) {\n            var newLastEditElem = _objectSpread({}, _this5.state.lastEditElem);\n\n            newLastEditElem.firstname = event.target.value;\n\n            _this5.setState({\n              lastEditElem: newLastEditElem\n            });\n          } else {\n            _this5.handleFormChange('firstName')(event);\n          }\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onFocus: function onFocus() {\n          return _this5.onTextInputFocus(\"lastName\");\n        },\n        required: !this.state.isEdit,\n        error: this.state.lastNameHasError,\n        style: {\n          display: 'block'\n        },\n        label: \"Last Name\",\n        value: this.state.isEdit ? lastname : this.state.lastName,\n        onChange: function onChange(event) {\n          if (_this5.state.isEdit) {\n            var newLastEditElem = _objectSpread({}, _this5.state.lastEditElem);\n\n            newLastEditElem.lastname = event.target.value;\n\n            _this5.setState({\n              lastEditElem: newLastEditElem\n            });\n          } else {\n            _this5.handleFormChange('lastName')(event);\n          }\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onFocus: function onFocus() {\n          return _this5.onTextInputFocus(\"emailAddress\");\n        },\n        required: true,\n        error: this.state.emailAddressHasError,\n        style: {\n          display: 'block'\n        },\n        label: \"Email\",\n        value: this.state.isEdit ? email : this.state.emailAddress,\n        onChange: function onChange(event) {\n          if (_this5.state.isEdit) {\n            var newLastEditElem = _objectSpread({}, _this5.state.lastEditElem);\n\n            newLastEditElem.email = event.target.value;\n\n            _this5.setState({\n              lastEditElem: newLastEditElem\n            });\n          } else {\n            _this5.handleFormChange('emailAddress')(event);\n          }\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }));\n      return dialogContent;\n    }\n  }, {\n    key: \"handleModalClose\",\n    value: function handleModalClose() {\n      var _this6 = this;\n\n      var selectedRegionUrl = this.state.selectedRegionUrl;\n      this.setState({\n        regionModal: false,\n        baseUrl: getBaseUrl(selectedRegionUrl),\n        wsUrl: getWsUrl(selectedRegionUrl),\n        producerUrl: getProducerUrl(selectedRegionUrl)\n      }, function () {\n        _this6.login();\n      });\n    }\n  }, {\n    key: \"renderRegionModal\",\n    value: function renderRegionModal() {\n      var _this7 = this;\n\n      var _this$state3 = this.state,\n          regionModal = _this$state3.regionModal,\n          availableRegions = _this$state3.availableRegions,\n          selectedRegionUrl = _this$state3.selectedRegionUrl;\n      return React.createElement(Dialog, {\n        fullWidth: true,\n        open: regionModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Select Region:\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        onChange: function onChange(event) {\n          var selectedRegionUrl = event.target.value;\n          var selectedRegionName = availableRegions.find(function (elem) {\n            return elem.value === selectedRegionUrl;\n          }).label;\n\n          _this7.setState({\n            selectedRegionUrl: selectedRegionUrl,\n            selectedRegionName: selectedRegionName\n          });\n        },\n        value: selectedRegionUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, availableRegions.map(function (region) {\n        return React.createElement(FormControlLabel, {\n          key: region.label,\n          value: region.value,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423\n            },\n            __self: this\n          }),\n          label: region.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        });\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !selectedRegionUrl,\n        onClick: function onClick() {\n          return _this7.handleModalClose();\n        },\n        size: \"small\",\n        variant: \"text\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"CONFIRM\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var _this$state4 = this.state,\n          data = _this$state4.data,\n          selectedRegionName = _this$state4.selectedRegionName;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: c8dbLogo,\n        alt: \"logo\",\n        style: {\n          height: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Address book is connected to \", selectedRegionName)), this.renderRegionModal(), React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, \"KEY\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        style: {\n          paddingLeft: '40px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, data.map(function (n) {\n        return React.createElement(TableRow, {\n          key: Math.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, n.key), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467\n          },\n          __self: this\n        }, n.firstname), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468\n          },\n          __self: this\n        }, n.lastname), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }, n.email), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this8.onEditPressed(n);\n          },\n          size: \"small\",\n          variant: \"text\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(Button, {\n          onClick: function onClick() {\n            _this8.onRemovePressed(n);\n          },\n          size: \"small\",\n          variant: \"text\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        }, \"Remove\")))));\n      })))), React.createElement(Fab, {\n        onClick: this.onFabPress,\n        style: {\n          position: 'fixed',\n          bottom: '70px',\n          right: '70px'\n        },\n        size: \"large\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"+\")), React.createElement(Dialog, {\n        onClose: this.resetModalData,\n        open: this.state.shouldShowModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, this.state.isEdit ? 'Edit contact details' : 'Add contact details'), this.renderDialogContent(), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          _this8.onSavePressed();\n        },\n        size: \"small\",\n        variant: \"text\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, this.state.isEdit ? 'UPDATE' : 'SAVE')), React.createElement(Button, {\n        onClick: this.resetModalData,\n        size: \"small\",\n        variant: \"text\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, \"DISCARD\")))), React.createElement(Snackbar, {\n        open: this.state.showSnackbar,\n        onClose: this.handleClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522\n          },\n          __self: this\n        }, this.state.snackbarText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }), this.state.isLoading && React.createElement(\"img\", {\n        src: spinner,\n        alt: \"logo\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/guest/workspace/EdgeFabricSampleApps/Global_AddressBook/addressbook-v2/src/App.js"],"names":["React","Component","$","spinner","Button","TextField","Table","TableBody","TableCell","TableHead","TableRow","Paper","Fab","Snackbar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Radio","RadioGroup","FormControlLabel","Config","getValidDataArray","deleteUtil","addOrUpdateUtil","getBaseUrl","getWsUrl","getProducerUrl","makeRegionData","App","props","handleFormChange","name","event","setState","target","value","console","log","Object","keys","state","shouldShowModal","showSnackbar","isEdit","snackbarText","firstName","lastName","emailAddress","firstNameHasError","lastNameHasError","emailAddressHasError","data","isLoading","lastEditElem","selectedRegionUrl","selectedRegionName","regionModal","availableRegions","baseUrl","wsUrl","producerUrl","onFabPress","bind","onSavePressed","resetModalData","fetchData","onTextInputFocus","onSocketMessageReceived","connection","undefined","producer","jwtToken","close","tenant","username","password","url","ajax","method","JSON","stringify","dataType","success","jwt","ajaxSetup","initWebSocket","error","handleSnackbar","headers","Authorization","WebSocket","onmessage","onopen","onerror","onclose","setInterval","send","key","payload","message","receiveMsg","parse","ackMsg","messageId","atob","_delete","deleteData","_key","addOrUpdateData","isDialog","self","type","contentType","processData","cache","validationObject","trim","email","validate","length","snackbarTextSuccess","snackbarTextFail","postData","firstname","lastname","element","setTimeout","dialogContent","display","newLastEditElem","login","find","elem","label","map","region","handleModalClose","c8dbLogo","height","renderRegionModal","paddingLeft","n","Math","random","onEditPressed","fontSize","onRemovePressed","position","bottom","right","renderDialogContent","handleClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery'\nimport c8dbLogo from './c8db-edition-edited.svg';\nimport spinner from './circle_spinner.gif';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Config from './Config';\n\nimport {\n  getValidDataArray,\n  deleteUtil,\n  addOrUpdateUtil,\n  getBaseUrl,\n  getWsUrl,\n  getProducerUrl,\n  makeRegionData\n} from \"./util\";\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(`------------->${Object.keys(Config)}`)\n    this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: true,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: ''\n    };\n\n    this.onFabPress = this.onFabPress.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onSavePressed = this.onSavePressed.bind(this);\n    this.resetModalData = this.resetModalData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.onTextInputFocus = this.onTextInputFocus.bind(this);\n    this.onSocketMessageReceived = this.onSocketMessageReceived.bind(this);\n    this.connection = undefined;\n    this.producer = undefined;\n    this.jwtToken = undefined;\n  }\n\n  componentWillUnmount() {\n    this.connection.close();\n    this.producer.close();\n  }\n\n  login() {\n    const data = {\n      tenant: 'demo',\n      username: 'demouser',\n      password: 'demouser'\n    };\n\n    const url = `https://${this.state.selectedRegionUrl}/_tenant/_mm/_fabric/_system/_open/auth`;\n    $.ajax({\n      url,\n      method: 'POST',\n      data: JSON.stringify(data),\n      dataType: 'json',\n      success: (data) => {\n        this.jwtToken = data.jwt;\n        this.ajaxSetup();\n        this.initWebSocket();\n        this.fetchData();\n      },\n      error: () => this.handleSnackbar(\"Auth failed.\")\n    })\n  }\n\n  ajaxSetup() {\n    $.ajaxSetup({\n      headers: {\n        Authorization: `bearer ${this.jwtToken}`\n      }\n    });\n  }\n\n  initWebSocket() {\n    const { wsUrl, producerUrl } = this.state;\n    this.connection = new WebSocket(wsUrl);\n\n    this.connection.onmessage = this.onSocketMessageReceived;\n\n    this.connection.onopen = () => console.log(\"WS connection established\");\n\n    this.connection.onerror = () => console.log(\"Failed to establish WS connection\");\n\n    this.connection.onclose = () => console.log(\"Closing WS connection\");\n\n    this.producer = new WebSocket(producerUrl);\n\n    this.producer.onopen = () => {\n      setInterval(() => {\n        this.producer.send(JSON.stringify({ 'payload': 'noop' }))\n      }, 30000);\n    }\n\n  }\n\n  deleteData(key) {\n    this.setState({ data: deleteUtil(key, this.state.data) });\n  }\n\n  addOrUpdateData(payload) {\n    this.setState({ data: addOrUpdateUtil(payload, this.state.data) });\n  }\n\n  onSocketMessageReceived(message) {\n    var receiveMsg = JSON.parse(message.data);\n    const ackMsg = { \"messageId\": receiveMsg.messageId };\n    this.connection.send(JSON.stringify(ackMsg));\n    if (receiveMsg.payload !== 'noop') {\n      const payload = JSON.parse(atob(receiveMsg.payload));\n      payload._delete ? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n    }\n  }\n\n  fetchData(isDialog) {\n    var self = this;\n    const { baseUrl: url } = this.state;\n\n    this.setState({ isLoading: true }, () => {\n\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: '{\"action\":\"read\"}',\n        success: function (data) {\n          self.resetModalData();\n          self.setState({\n            isLoading: false,\n            data: getValidDataArray(data)\n          });\n        },\n        error: function (data) {\n          if (isDialog) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n          });\n          self.handleSnackbar(\"Could not fetch data\");\n          console.log('Error:', data);\n        }\n      });\n    });\n  }\n\n  onFabPress() {\n    this.setState({ shouldShowModal: true })\n  }\n\n  resetModalData() {\n    this.setState({\n      lastEditElem: undefined,\n      shouldShowModal: false,\n      isEdit: false,\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false\n    });\n  }\n\n  handleFormChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  validate() {\n    const { firstName, lastName, emailAddress } = this.state;\n    const validationObject = {};\n    if (!this.state.isEdit) {\n      if (!firstName.trim()) {\n        validationObject.firstNameHasError = true;\n      }\n      if (!lastName.trim()) {\n        validationObject.lastNameHasError = true;\n      }\n      if (!emailAddress.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n    else {\n      if (!this.state.lastEditElem.email.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n\n    return validationObject;\n  }\n\n  onSavePressed() {\n\n    const self = this;\n    const { baseUrl: url } = this.state;\n\n    const validationObject = this.validate();\n    if (Object.keys(validationObject).length === 0) {\n\n      let snackbarTextSuccess = 'Contact details added successfully';\n      let snackbarTextFail = 'Contact details could not be added';\n      let postData = { \"action\": \"create\", \"data\": { \"firstname\": this.state.firstName, \"lastname\": this.state.lastName, \"email\": this.state.emailAddress } }\n      if (this.state.isEdit) {\n        postData = { \"action\": \"update\", \"data\": { \"key\": this.state.lastEditElem.key, \"firstname\": this.state.lastEditElem.firstname, \"lastname\": this.state.lastEditElem.lastname, \"email\": this.state.lastEditElem.email } }\n        snackbarTextSuccess = 'Contact details updated successfully';\n        snackbarTextFail = 'Contact details could not be updated';\n      }\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify(postData),\n        success: function () {\n          self.handleSnackbar(snackbarTextSuccess);\n          self.resetModalData();\n        },\n        error: function (data) {\n          self.handleSnackbar(snackbarTextFail);\n          self.resetModalData();\n          console.log('Error:', data);\n        }\n      });\n\n    }\n    else {\n      //show error\n      this.setState({ ...validationObject });\n    }\n  }\n\n  onTextInputFocus(name) {\n    if (this.state[`${name}HasError`]) {\n      this.setState({ [`${name}HasError`]: false });\n    }\n  }\n\n  onEditPressed(element) {\n    if (element) {\n      //show edit modal\n      this.setState({ shouldShowModal: true, isEdit: true, lastEditElem: element });\n    }\n  }\n\n  onRemovePressed(element) {\n    const self = this;\n    const { baseUrl: url } = this.state;\n    if (element) {\n      this.setState({ lastEditElem: element }, () => {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url,\n          data: JSON.stringify({ \"action\": \"delete\", \"data\": { \"key\": element.key } }),\n          success: function () {\n            self.handleSnackbar(\"Contact details removed successfully\");\n            self.resetModalData();\n          },\n          error: function (data) {\n            self.handleSnackbar(\"Contact details could not be removed\");\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }\n\n  handleSnackbar(snackbarText) {\n    this.setState({ showSnackbar: true, snackbarText: snackbarText }, () => {\n      setTimeout(() => {\n        this.setState({ showSnackbar: false, snackbarText: '' });\n      }, 2000);\n    });\n  };\n\n  renderDialogContent() {\n    const { firstname, lastname, email } = (this.state.lastEditElem || {});\n    let dialogContent = (\n      <DialogContent>\n        <DialogContentText>\n          {this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'}\n        </DialogContentText>\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"firstName\")}\n          required={!this.state.isEdit}\n          error={this.state.firstNameHasError}\n          style={{ display: 'block' }}\n          label=\"First Name\"\n          value={this.state.isEdit ? firstname : this.state.firstName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.firstname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('firstName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"lastName\")}\n          required={!this.state.isEdit}\n          error={this.state.lastNameHasError}\n          style={{ display: 'block' }}\n          label=\"Last Name\"\n          value={this.state.isEdit ? lastname : this.state.lastName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.lastname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('lastName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"emailAddress\")}\n          required\n          error={this.state.emailAddressHasError}\n          style={{ display: 'block' }}\n          label=\"Email\"\n          value={this.state.isEdit ? email : this.state.emailAddress}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.email = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('emailAddress')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n      </DialogContent>\n    );\n    return dialogContent;\n  }\n\n  handleModalClose() {\n    const { selectedRegionUrl } = this.state;\n    this.setState({\n      regionModal: false,\n      baseUrl: getBaseUrl(selectedRegionUrl),\n      wsUrl: getWsUrl(selectedRegionUrl),\n      producerUrl: getProducerUrl(selectedRegionUrl)\n    }, () => {\n      this.login();\n    });\n  }\n\n  renderRegionModal() {\n    const { regionModal, availableRegions, selectedRegionUrl } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={regionModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Select Region:</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            onChange={event => {\n              const selectedRegionUrl = event.target.value;\n              const selectedRegionName = availableRegions.find(elem => elem.value === selectedRegionUrl).label;\n              this.setState({ selectedRegionUrl, selectedRegionName })\n            }\n            }\n            value={selectedRegionUrl}\n          >\n            {\n              availableRegions.map(region => <FormControlLabel key={region.label} value={region.value} control={<Radio />} label={region.label} />)\n            }\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={!selectedRegionUrl}\n            onClick={() => this.handleModalClose()}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  render() {\n    const { data, selectedRegionName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={c8dbLogo} alt=\"logo\" style={{ height: '100px' }} />\n          <h1 className=\"App-title\">Address book is connected to {selectedRegionName}</h1>\n        </header>\n        {this.renderRegionModal()}\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>KEY</TableCell>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell style={{ paddingLeft: '40px' }}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(n => {\n                return (\n                  <TableRow key={Math.random()}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n.key}\n                    </TableCell>\n                    <TableCell>{n.firstname}</TableCell>\n                    <TableCell>{n.lastname}</TableCell>\n                    <TableCell>{n.email}</TableCell>\n                    <TableCell>{\n                      <div>\n                        <Button\n                          onClick={() => { this.onEditPressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"primary\">\n                          <span style={{ fontSize: \"10px\" }}>Edit</span>\n                        </Button>\n                        <Button\n                          onClick={() => { this.onRemovePressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"secondary\">\n                          <span style={{ fontSize: \"10px\" }}>Remove</span>\n                        </Button>\n                      </div>\n                    }</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Fab\n          onClick={this.onFabPress}\n          style={{ position: 'fixed', bottom: '70px', right: '70px' }} size=\"large\" color=\"primary\">\n          <span style={{ fontSize: \"30px\" }}>+</span>\n        </Fab>\n        {/* add new contact dialog*/}\n        <Dialog\n          onClose={this.resetModalData}\n          open={this.state.shouldShowModal}\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.state.isEdit ? 'Edit contact details' : 'Add contact details'}</DialogTitle>\n          {this.renderDialogContent()}\n          <DialogActions>\n            <Button\n              onClick={() => { this.onSavePressed() }}\n              size=\"small\" variant=\"text\" color=\"primary\">\n              <span className=\"actions\">{this.state.isEdit ? 'UPDATE' : 'SAVE'}</span>\n            </Button>\n            <Button\n              onClick={this.resetModalData}\n              size=\"small\" variant=\"text\" color=\"secondary\">\n              <span className=\"actions\">DISCARD</span>\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={this.state.showSnackbar}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n        />\n        {\n          this.state.isLoading && <img src={spinner} alt=\"logo\" className=\"spinner\" />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}