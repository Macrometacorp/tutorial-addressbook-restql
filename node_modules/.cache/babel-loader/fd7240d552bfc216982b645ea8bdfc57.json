{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Route =\n/*#__PURE__*/\nfunction () {\n  function Route(connection) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Route);\n\n    if (!path) path = \"\";else if (path.charAt(0) !== \"/\") path = \"/\".concat(path);\n    this._connection = connection;\n    this._path = path;\n    this._headers = headers;\n  }\n\n  _createClass(Route, [{\n    key: \"route\",\n    value: function route(path, headers) {\n      if (!path) path = \"\";else if (path.charAt(0) !== \"/\") path = \"/\".concat(path);\n      return new Route(this._connection, this._path + path, Object.assign({}, this._headers, headers));\n    }\n  }, {\n    key: \"request\",\n    value: function request(_a) {\n      var method = _a.method,\n          path = _a.path,\n          _a$headers = _a.headers,\n          headers = _a$headers === void 0 ? {} : _a$headers,\n          opts = __rest(_a, [\"method\", \"path\", \"headers\"]);\n\n      if (!path) opts.path = \"\";else if (this._path && path.charAt(0) !== \"/\") opts.path = \"/\".concat(path);else opts.path = path;\n      opts.basePath = this._path;\n      opts.headers = Object.assign({}, this._headers, headers);\n      opts.method = method ? method.toUpperCase() : \"GET\";\n      return this._connection.request(opts);\n    }\n  }, {\n    key: \"_request1\",\n    value: function _request1(method) {\n      var path = \"\";\n      var qs;\n      var headers;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (args[0] === undefined || typeof args[0] === \"string\") {\n        path = args.shift();\n      }\n\n      if (args[0] === undefined || typeof args[0] === \"object\") {\n        qs = args.shift();\n      }\n\n      if (args[0] === undefined || typeof args[0] === \"object\") {\n        headers = args.shift();\n      }\n\n      return this.request({\n        method: method,\n        path: path,\n        qs: qs,\n        headers: headers\n      });\n    }\n  }, {\n    key: \"_request2\",\n    value: function _request2(method) {\n      var path = \"\";\n      var body = undefined;\n      var qs;\n      var headers;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      if (args[0] === undefined || typeof args[0] === \"string\") {\n        path = args.shift();\n      }\n\n      body = args.shift();\n\n      if (args[0] === undefined || typeof args[0] === \"object\") {\n        qs = args.shift();\n      }\n\n      if (args[0] === undefined || typeof args[0] === \"object\") {\n        headers = args.shift();\n      }\n\n      return this.request({\n        method: method,\n        path: path,\n        body: body,\n        qs: qs,\n        headers: headers\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this._request1.apply(this, [\"DELETE\"].concat(args));\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return this._request1.apply(this, [\"GET\"].concat(args));\n    }\n  }, {\n    key: \"head\",\n    value: function head() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return this._request1.apply(this, [\"HEAD\"].concat(args));\n    }\n  }, {\n    key: \"patch\",\n    value: function patch() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return this._request2.apply(this, [\"PATCH\"].concat(args));\n    }\n  }, {\n    key: \"post\",\n    value: function post() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return this._request2.apply(this, [\"POST\"].concat(args));\n    }\n  }, {\n    key: \"put\",\n    value: function put() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      return this._request2.apply(this, [\"PUT\"].concat(args));\n    }\n  }]);\n\n  return Route;\n}();\n\nexports.Route = Route;","map":null,"metadata":{},"sourceType":"script"}