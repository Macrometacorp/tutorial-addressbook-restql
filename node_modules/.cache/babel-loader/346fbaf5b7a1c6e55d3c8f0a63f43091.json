{"ast":null,"code":"import _objectSpread from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/guest/workspace/tutorials/tutorial-addressbook-restql/src/App.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport c8dbLogo from './macrometa-white-transparent.png';\nimport spinner from './circle_spinner.gif';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Fabric } from \"jsc8\";\nimport Config from './Config';\nimport { deleteUtil, addOrUpdateUtil, getBaseUrl, getWsUrl, getProducerUrl, makeRegionData } from \"./util\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleFormChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: true,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: ''\n    };\n    _this.onFabPress = _this.onFabPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormChange = _this.handleFormChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSavePressed = _this.onSavePressed.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.resetModalData = _this.resetModalData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextInputFocus = _this.onTextInputFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSocketMessageReceived = _this.onSocketMessageReceived.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.connection = undefined;\n    _this.producer = undefined;\n    _this.jwtToken = undefined;\n    _this.fabric = undefined;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.fabric = new Fabric(\"https://\".concat(this.state.selectedRegionUrl));\n                _context.next = 3;\n                return this.login1();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.connection.close();\n      this.producer.close();\n    }\n  }, {\n    key: \"login1\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.fabric.login(\"demo\", \"root\", \"demo\");\n\n              case 2:\n                this.fabric.useTenant(\"demo\");\n                this.fabric.useFabric(\"_system\");\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function login1() {\n        return _login.apply(this, arguments);\n      }\n\n      return login1;\n    }() // login() {\n    //   const data = {\n    //     tenant: 'demo',\n    //     username: 'root',\n    //     password: 'demo'\n    //   };\n    //   const url = `https://${this.state.selectedRegionUrl}/_tenant/_mm/_fabric/_system/_open/auth`;\n    //   $.ajax({\n    //     url,\n    //     method: 'POST',\n    //     data: JSON.stringify(data),\n    //     dataType: 'json',\n    //     success: (data) => {\n    //       this.jwtToken = data.jwt;\n    //       this.ajaxSetup();\n    //       this.saveQueries();\n    //     },\n    //     error: () => this.handleSnackbar(\"Auth failed.\")\n    //   })\n    // }\n    // ajaxSetup() {\n    //   $.ajaxSetup({\n    //     headers: {\n    //       Authorization: `bearer ${this.jwtToken}`\n    //     }\n    //   });\n    // }\n\n  }, {\n    key: \"createCollection\",\n    value: function () {\n      var _createCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var collection, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                collection = this.fabric.collection('addresses');\n                _context3.next = 3;\n                return collection.exists();\n\n              case 3:\n                result = _context3.sent;\n                console.log(\"Coll Exists\", result);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createCollection() {\n        return _createCollection.apply(this, arguments);\n      }\n\n      return createCollection;\n    }()\n  }, {\n    key: \"saveQueries\",\n    value: function saveQueries() {\n      var url = this.state.baseUrl;\n      var self = this;\n      var readQuery = $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url: url,\n        data: JSON.stringify({\n          \"query\": {\n            \"name\": \"Read\",\n            \"parameter\": {},\n            \"value\": \"FOR entry IN addresses RETURN entry\"\n          }\n        })\n      });\n      var writeQuery = $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url: url,\n        data: JSON.stringify({\n          \"query\": {\n            \"name\": \"Write\",\n            \"parameter\": {},\n            \"value\": \"INSERT {firstname:@firstName,lastname:@lastName,email:@email} INTO addresses\"\n          }\n        })\n      });\n      var removeQuery = $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url: url,\n        data: JSON.stringify({\n          \"query\": {\n            \"name\": \"Remove\",\n            \"parameter\": {},\n            \"value\": \"REMOVE @_key IN addresses\"\n          }\n        }),\n        error: function error(data) {\n          console.log('Error:', data);\n        }\n      });\n      var updateQuery = $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url: url,\n        data: JSON.stringify({\n          \"query\": {\n            \"name\": \"Update\",\n            \"parameter\": {},\n            \"value\": \"UPDATE @_key WITH { firstname:@firstName, lastname:@lastName, email:@email} IN addresses\"\n          }\n        })\n      });\n      $.when(readQuery, writeQuery, updateQuery, removeQuery).done(function (r1, r2, r3, r4) {\n        self.initWebSocket();\n        self.fetchData();\n      });\n    }\n  }, {\n    key: \"initWebSocket\",\n    value: function initWebSocket() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          wsUrl = _this$state.wsUrl,\n          producerUrl = _this$state.producerUrl;\n      this.connection = new WebSocket(wsUrl);\n      this.connection.onmessage = this.onSocketMessageReceived;\n\n      this.connection.onopen = function () {\n        return console.log(\"WS connection established\");\n      };\n\n      this.connection.onerror = function () {\n        return console.log(\"Failed to establish WS connection\");\n      };\n\n      this.connection.onclose = function () {\n        return console.log(\"Closing WS connection\");\n      };\n\n      this.producer = new WebSocket(producerUrl);\n\n      this.producer.onopen = function () {\n        setInterval(function () {\n          _this2.producer.send(JSON.stringify({\n            'payload': 'noop'\n          }));\n        }, 30000);\n      };\n    }\n  }, {\n    key: \"deleteData\",\n    value: function deleteData(key) {\n      this.setState({\n        data: deleteUtil(key, this.state.data)\n      });\n    }\n  }, {\n    key: \"addOrUpdateData\",\n    value: function addOrUpdateData(payload) {\n      this.setState({\n        data: addOrUpdateUtil(payload, this.state.data)\n      });\n    }\n  }, {\n    key: \"onSocketMessageReceived\",\n    value: function onSocketMessageReceived(message) {\n      var receiveMsg = JSON.parse(message.data);\n      var ackMsg = {\n        \"messageId\": receiveMsg.messageId\n      };\n      this.connection.send(JSON.stringify(ackMsg));\n\n      if (receiveMsg.payload !== 'noop') {\n        var payload = JSON.parse(atob(receiveMsg.payload));\n        payload._delete ? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n      }\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(isDialog) {\n      var self = this;\n      var url = this.state.baseUrl;\n      url = url + \"/execute/Read\";\n      this.setState({\n        isLoading: true\n      }, function () {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url: url,\n          data: JSON.stringify({}),\n          success: function success(data) {\n            self.resetModalData();\n            self.setState({\n              isLoading: false,\n              data: data.result\n            });\n          },\n          error: function error(data) {\n            if (isDialog) {\n              self.resetModalData();\n            }\n\n            self.setState({\n              isLoading: false\n            });\n            self.handleSnackbar(\"Could not fetch data\");\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"onFabPress\",\n    value: function onFabPress() {\n      this.setState({\n        shouldShowModal: true\n      });\n    }\n  }, {\n    key: \"resetModalData\",\n    value: function resetModalData() {\n      this.setState({\n        lastEditElem: undefined,\n        shouldShowModal: false,\n        isEdit: false,\n        firstName: '',\n        lastName: '',\n        emailAddress: '',\n        firstNameHasError: false,\n        lastNameHasError: false,\n        emailAddressHasError: false\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          emailAddress = _this$state2.emailAddress;\n      var validationObject = {};\n\n      if (!this.state.isEdit) {\n        if (!firstName.trim()) {\n          validationObject.firstNameHasError = true;\n        }\n\n        if (!lastName.trim()) {\n          validationObject.lastNameHasError = true;\n        }\n\n        if (!emailAddress.trim()) {\n          validationObject.emailAddressHasError = true;\n        }\n      } else {\n        if (!this.state.lastEditElem.email.trim()) {\n          validationObject.emailAddressHasError = true;\n        }\n      }\n\n      return validationObject;\n    }\n  }, {\n    key: \"onSavePressed\",\n    value: function onSavePressed() {\n      var self = this;\n      var url = this.state.baseUrl;\n      var validationObject = this.validate();\n\n      if (Object.keys(validationObject).length === 0) {\n        var snackbarTextSuccess = 'Contact details added successfully';\n        var snackbarTextFail = 'Contact details could not be added';\n        var _this$state3 = this.state,\n            firstName = _this$state3.firstName,\n            lastName = _this$state3.lastName,\n            emailAddress = _this$state3.emailAddress,\n            isEdit = _this$state3.isEdit;\n        var name = \"Write\";\n        var postData = {\n          \"firstName\": firstName,\n          \"lastName\": lastName,\n          \"email\": emailAddress\n        };\n\n        if (isEdit) {\n          name = \"Update\";\n          var _this$state$lastEditE = this.state.lastEditElem,\n              _key = _this$state$lastEditE._key,\n              firstname = _this$state$lastEditE.firstname,\n              lastname = _this$state$lastEditE.lastname,\n              email = _this$state$lastEditE.email; // postData = `{\"_key\":\"${_key}\", firstName\":\"${firstname}\", \"lastName\":\"${lastname}\", \"email\":\"${email}\" }`;\n\n          postData = {\n            \"_key\": _key,\n            \"firstName\": firstname,\n            \"lastName\": lastname,\n            \"email\": email\n          };\n          snackbarTextSuccess = 'Contact details updated successfully';\n          snackbarTextFail = 'Contact details could not be updated';\n        }\n\n        url = url + \"/execute/\" + name;\n        console.log(\"URL\", url);\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url: url,\n          data: JSON.stringify({\n            \"bindVars\": postData\n          }),\n          success: function success() {\n            self.handleSnackbar(snackbarTextSuccess);\n            self.resetModalData();\n          },\n          error: function error(data) {\n            self.handleSnackbar(snackbarTextFail);\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      } else {\n        //show error\n        this.setState(_objectSpread({}, validationObject));\n      }\n    }\n  }, {\n    key: \"onTextInputFocus\",\n    value: function onTextInputFocus(name) {\n      if (this.state[\"\".concat(name, \"HasError\")]) {\n        this.setState(_defineProperty({}, \"\".concat(name, \"HasError\"), false));\n      }\n    }\n  }, {\n    key: \"onEditPressed\",\n    value: function onEditPressed(element) {\n      if (element) {\n        //show edit modal\n        this.setState({\n          shouldShowModal: true,\n          isEdit: true,\n          lastEditElem: element\n        });\n      }\n    }\n  }, {\n    key: \"onRemovePressed\",\n    value: function onRemovePressed(element) {\n      var self = this;\n      var url = this.state.baseUrl;\n      url = url + \"/execute/Remove\";\n      var postData = \"{\\\"_key\\\": \\\"\".concat(element._key, \"\\\"}\");\n\n      if (element) {\n        this.setState({\n          lastEditElem: element\n        }, function () {\n          $.ajax({\n            type: \"POST\",\n            contentType: 'text/plain',\n            processData: false,\n            cache: false,\n            url: url,\n            data: JSON.stringify({\n              \"bindVars\": JSON.parse(postData)\n            }),\n            success: function success() {\n              self.handleSnackbar(\"Contact details removed successfully\");\n              self.resetModalData();\n            },\n            error: function error(data) {\n              self.handleSnackbar(\"Contact details could not be removed\");\n              self.resetModalData();\n              console.log('Error:', data);\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSnackbar\",\n    value: function handleSnackbar(snackbarText) {\n      var _this3 = this;\n\n      this.setState({\n        showSnackbar: true,\n        snackbarText: snackbarText\n      }, function () {\n        setTimeout(function () {\n          _this3.setState({\n            showSnackbar: false,\n            snackbarText: ''\n          });\n        }, 2000);\n      });\n    }\n  }, {\n    key: \"renderDialogContent\",\n    value: function renderDialogContent() {\n      var _this4 = this;\n\n      var _ref = this.state.lastEditElem || {},\n          firstname = _ref.firstname,\n          lastname = _ref.lastname,\n          email = _ref.email;\n\n      var dialogContent = React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'), React.createElement(TextField, {\n        onFocus: function onFocus() {\n          return _this4.onTextInputFocus(\"firstName\");\n        },\n        required: !this.state.isEdit,\n        error: this.state.firstNameHasError,\n        style: {\n          display: 'block'\n        },\n        label: \"First Name\",\n        value: this.state.isEdit ? firstname : this.state.firstName,\n        onChange: function onChange(event) {\n          if (_this4.state.isEdit) {\n            var newLastEditElem = _objectSpread({}, _this4.state.lastEditElem);\n\n            newLastEditElem.firstname = event.target.value;\n\n            _this4.setState({\n              lastEditElem: newLastEditElem\n            });\n          } else {\n            _this4.handleFormChange('firstName')(event);\n          }\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onFocus: function onFocus() {\n          return _this4.onTextInputFocus(\"lastName\");\n        },\n        required: !this.state.isEdit,\n        error: this.state.lastNameHasError,\n        style: {\n          display: 'block'\n        },\n        label: \"Last Name\",\n        value: this.state.isEdit ? lastname : this.state.lastName,\n        onChange: function onChange(event) {\n          if (_this4.state.isEdit) {\n            var newLastEditElem = _objectSpread({}, _this4.state.lastEditElem);\n\n            newLastEditElem.lastname = event.target.value;\n\n            _this4.setState({\n              lastEditElem: newLastEditElem\n            });\n          } else {\n            _this4.handleFormChange('lastName')(event);\n          }\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onFocus: function onFocus() {\n          return _this4.onTextInputFocus(\"emailAddress\");\n        },\n        required: true,\n        error: this.state.emailAddressHasError,\n        style: {\n          display: 'block'\n        },\n        label: \"Email\",\n        value: this.state.isEdit ? email : this.state.emailAddress,\n        onChange: function onChange(event) {\n          if (_this4.state.isEdit) {\n            var newLastEditElem = _objectSpread({}, _this4.state.lastEditElem);\n\n            newLastEditElem.email = event.target.value;\n\n            _this4.setState({\n              lastEditElem: newLastEditElem\n            });\n          } else {\n            _this4.handleFormChange('emailAddress')(event);\n          }\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }));\n      return dialogContent;\n    }\n  }, {\n    key: \"handleModalClose\",\n    value: function handleModalClose() {\n      var _this5 = this;\n\n      var selectedRegionUrl = this.state.selectedRegionUrl;\n      this.setState({\n        regionModal: false,\n        baseUrl: getBaseUrl(selectedRegionUrl),\n        wsUrl: getWsUrl(selectedRegionUrl),\n        producerUrl: getProducerUrl(selectedRegionUrl)\n      }, function () {\n        _this5.login();\n      });\n    }\n  }, {\n    key: \"renderRegionModal\",\n    value: function renderRegionModal() {\n      var _this6 = this;\n\n      var _this$state4 = this.state,\n          regionModal = _this$state4.regionModal,\n          availableRegions = _this$state4.availableRegions,\n          selectedRegionUrl = _this$state4.selectedRegionUrl;\n      return React.createElement(Dialog, {\n        fullWidth: true,\n        open: regionModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \"Select Region:\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        onChange: function onChange(event) {\n          var selectedRegionUrl = event.target.value;\n          var selectedRegionName = availableRegions.find(function (elem) {\n            return elem.value === selectedRegionUrl;\n          }).label;\n\n          _this6.setState({\n            selectedRegionUrl: selectedRegionUrl,\n            selectedRegionName: selectedRegionName\n          });\n        },\n        value: selectedRegionUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, availableRegions.map(function (region) {\n        return React.createElement(FormControlLabel, {\n          key: region.label,\n          value: region.value,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 529\n            },\n            __self: this\n          }),\n          label: region.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529\n          },\n          __self: this\n        });\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !selectedRegionUrl,\n        onClick: function onClick() {\n          return _this6.handleModalClose();\n        },\n        size: \"small\",\n        variant: \"text\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, \"CONFIRM\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$state5 = this.state,\n          data = _this$state5.data,\n          selectedRegionName = _this$state5.selectedRegionName;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: c8dbLogo,\n        alt: \"logo\",\n        style: {\n          height: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \"Address book is connected to \", selectedRegionName)), this.renderRegionModal(), React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"KEY\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        style: {\n          paddingLeft: '40px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, data.map(function (n) {\n        return React.createElement(TableRow, {\n          key: Math.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570\n          },\n          __self: this\n        }, n._key), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573\n          },\n          __self: this\n        }, n.firstname), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574\n          },\n          __self: this\n        }, n.lastname), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        }, n.email), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            _this7.onEditPressed(n);\n          },\n          size: \"small\",\n          variant: \"text\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(Button, {\n          onClick: function onClick() {\n            _this7.onRemovePressed(n);\n          },\n          size: \"small\",\n          variant: \"text\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586\n          },\n          __self: this\n        }, \"Remove\")))));\n      })))), React.createElement(Fab, {\n        onClick: this.onFabPress,\n        style: {\n          position: 'fixed',\n          bottom: '70px',\n          right: '70px'\n        },\n        size: \"large\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \"+\")), React.createElement(Dialog, {\n        onClose: this.resetModalData,\n        open: this.state.shouldShowModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, this.state.isEdit ? 'Edit contact details' : 'Add contact details'), this.renderDialogContent(), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          _this7.onSavePressed();\n        },\n        size: \"small\",\n        variant: \"text\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, this.state.isEdit ? 'UPDATE' : 'SAVE')), React.createElement(Button, {\n        onClick: this.resetModalData,\n        size: \"small\",\n        variant: \"text\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, \"DISCARD\")))), React.createElement(Snackbar, {\n        open: this.state.showSnackbar,\n        onClose: this.handleClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628\n          },\n          __self: this\n        }, this.state.snackbarText),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }), this.state.isLoading && React.createElement(\"img\", {\n        src: spinner,\n        alt: \"logo\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/guest/workspace/tutorials/tutorial-addressbook-restql/src/App.js"],"names":["React","Component","$","c8dbLogo","spinner","Button","TextField","Table","TableBody","TableCell","TableHead","TableRow","Paper","Fab","Snackbar","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Radio","RadioGroup","FormControlLabel","Fabric","Config","deleteUtil","addOrUpdateUtil","getBaseUrl","getWsUrl","getProducerUrl","makeRegionData","App","props","handleFormChange","name","event","setState","target","value","state","shouldShowModal","showSnackbar","isEdit","snackbarText","firstName","lastName","emailAddress","firstNameHasError","lastNameHasError","emailAddressHasError","data","isLoading","lastEditElem","selectedRegionUrl","selectedRegionName","regionModal","availableRegions","baseUrl","wsUrl","producerUrl","onFabPress","bind","onSavePressed","resetModalData","fetchData","onTextInputFocus","onSocketMessageReceived","connection","undefined","producer","jwtToken","fabric","login1","close","login","useTenant","useFabric","collection","exists","result","console","log","url","self","readQuery","ajax","type","contentType","processData","cache","JSON","stringify","writeQuery","removeQuery","error","updateQuery","when","done","r1","r2","r3","r4","initWebSocket","WebSocket","onmessage","onopen","onerror","onclose","setInterval","send","key","payload","message","receiveMsg","parse","ackMsg","messageId","atob","_delete","deleteData","_key","addOrUpdateData","isDialog","success","handleSnackbar","validationObject","trim","email","validate","Object","keys","length","snackbarTextSuccess","snackbarTextFail","postData","firstname","lastname","element","setTimeout","dialogContent","display","newLastEditElem","find","elem","label","map","region","handleModalClose","height","renderRegionModal","paddingLeft","n","Math","random","onEditPressed","fontSize","onRemovePressed","position","bottom","right","renderDialogContent","handleClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery'\nimport c8dbLogo from './macrometa-white-transparent.png';\nimport spinner from './circle_spinner.gif';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { Fabric } from \"jsc8\";\n\nimport Config from './Config';\n\nimport {\n  deleteUtil,\n  addOrUpdateUtil,\n  getBaseUrl,\n  getWsUrl,\n  getProducerUrl,\n  makeRegionData\n} from \"./util\";\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: true,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: ''\n    };\n\n    this.onFabPress = this.onFabPress.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onSavePressed = this.onSavePressed.bind(this);\n    this.resetModalData = this.resetModalData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.onTextInputFocus = this.onTextInputFocus.bind(this);\n    this.onSocketMessageReceived = this.onSocketMessageReceived.bind(this);\n    this.connection = undefined;\n    this.producer = undefined;\n    this.jwtToken = undefined;\n    this.fabric = undefined;\n  }\n\n  async componentDidMount() {\n    this.fabric = new Fabric(`https://${this.state.selectedRegionUrl}`);\n    await this.login1();\n\n  }\n\n  componentWillUnmount() {\n    this.connection.close();\n    this.producer.close();\n  }\n\n  async login1() {\n    await this.fabric.login(\"demo\", \"root\", \"demo\");\n    this.fabric.useTenant(\"demo\");\n    this.fabric.useFabric(\"_system\");\n  }\n\n  // login() {\n  //   const data = {\n  //     tenant: 'demo',\n  //     username: 'root',\n  //     password: 'demo'\n  //   };\n\n  //   const url = `https://${this.state.selectedRegionUrl}/_tenant/_mm/_fabric/_system/_open/auth`;\n  //   $.ajax({\n  //     url,\n  //     method: 'POST',\n  //     data: JSON.stringify(data),\n  //     dataType: 'json',\n  //     success: (data) => {\n  //       this.jwtToken = data.jwt;\n  //       this.ajaxSetup();\n  //       this.saveQueries();\n\n  //     },\n  //     error: () => this.handleSnackbar(\"Auth failed.\")\n  //   })\n  // }\n\n\n  // ajaxSetup() {\n  //   $.ajaxSetup({\n  //     headers: {\n  //       Authorization: `bearer ${this.jwtToken}`\n  //     }\n  //   });\n  // }\n\n  async createCollection() {\n    const collection = this.fabric.collection('addresses');\n    const result = await collection.exists();\n    console.log(\"Coll Exists\", result)\n\n  }\n\n  saveQueries() {\n\n    const { baseUrl: url } = this.state;\n    const self = this;\n\n    var readQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Read\",\n          \"parameter\": {},\n          \"value\": \"FOR entry IN addresses RETURN entry\"\n        }\n      })\n    });\n\n    var writeQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Write\",\n          \"parameter\": {},\n          \"value\": \"INSERT {firstname:@firstName,lastname:@lastName,email:@email} INTO addresses\"\n        }\n      })\n    });\n\n    var removeQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Remove\",\n          \"parameter\": {},\n          \"value\": \"REMOVE @_key IN addresses\"\n        }\n      }),\n      error: function (data) {\n        console.log('Error:', data);\n      }\n    });\n\n    var updateQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Update\",\n          \"parameter\": {},\n          \"value\": \"UPDATE @_key WITH { firstname:@firstName, lastname:@lastName, email:@email} IN addresses\"\n        }\n      }\n      )\n    });\n\n    $.when(readQuery, writeQuery, updateQuery, removeQuery).done(function (r1, r2, r3, r4) {\n      self.initWebSocket();\n      self.fetchData();\n    });\n\n  }\n\n\n\n  initWebSocket() {\n    const { wsUrl, producerUrl } = this.state;\n    this.connection = new WebSocket(wsUrl);\n\n    this.connection.onmessage = this.onSocketMessageReceived;\n\n    this.connection.onopen = () => console.log(\"WS connection established\");\n\n    this.connection.onerror = () => console.log(\"Failed to establish WS connection\");\n\n    this.connection.onclose = () => console.log(\"Closing WS connection\");\n\n    this.producer = new WebSocket(producerUrl);\n\n    this.producer.onopen = () => {\n      setInterval(() => {\n        this.producer.send(JSON.stringify({ 'payload': 'noop' }))\n      }, 30000);\n    }\n\n  }\n\n  deleteData(key) {\n    this.setState({ data: deleteUtil(key, this.state.data) });\n  }\n\n  addOrUpdateData(payload) {\n    this.setState({ data: addOrUpdateUtil(payload, this.state.data) });\n  }\n\n  onSocketMessageReceived(message) {\n    var receiveMsg = JSON.parse(message.data);\n    const ackMsg = { \"messageId\": receiveMsg.messageId };\n    this.connection.send(JSON.stringify(ackMsg));\n    if (receiveMsg.payload !== 'noop') {\n      const payload = JSON.parse(atob(receiveMsg.payload));\n      payload._delete ? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n    }\n  }\n\n  fetchData(isDialog) {\n    var self = this;\n    let { baseUrl: url } = this.state;\n    url = url + \"/execute/Read\"\n    this.setState({ isLoading: true }, () => {\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({}),\n        success: function (data) {\n          self.resetModalData();\n          self.setState({\n            isLoading: false,\n            data: data.result\n          });\n        },\n        error: function (data) {\n          if (isDialog) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n          });\n          self.handleSnackbar(\"Could not fetch data\");\n          console.log('Error:', data);\n        }\n      });\n    });\n  }\n\n  onFabPress() {\n    this.setState({ shouldShowModal: true })\n  }\n\n  resetModalData() {\n    this.setState({\n      lastEditElem: undefined,\n      shouldShowModal: false,\n      isEdit: false,\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false\n    });\n  }\n\n  handleFormChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  validate() {\n    const { firstName, lastName, emailAddress } = this.state;\n    const validationObject = {};\n    if (!this.state.isEdit) {\n      if (!firstName.trim()) {\n        validationObject.firstNameHasError = true;\n      }\n      if (!lastName.trim()) {\n        validationObject.lastNameHasError = true;\n      }\n      if (!emailAddress.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n    else {\n      if (!this.state.lastEditElem.email.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n\n    return validationObject;\n  }\n\n  onSavePressed() {\n\n    const self = this;\n    let { baseUrl: url } = this.state;\n    const validationObject = this.validate();\n    if (Object.keys(validationObject).length === 0) {\n\n      let snackbarTextSuccess = 'Contact details added successfully';\n      let snackbarTextFail = 'Contact details could not be added';\n      const { firstName, lastName, emailAddress, isEdit } = this.state;\n      let name = \"Write\";\n      let postData = { \"firstName\": firstName, \"lastName\": lastName, \"email\": emailAddress };\n      if (isEdit) {\n        name = \"Update\";\n        const { lastEditElem: { _key, firstname, lastname, email } } = this.state;\n        // postData = `{\"_key\":\"${_key}\", firstName\":\"${firstname}\", \"lastName\":\"${lastname}\", \"email\":\"${email}\" }`;\n        postData = { \"_key\": _key, \"firstName\": firstname, \"lastName\": lastname, \"email\": email };\n        snackbarTextSuccess = 'Contact details updated successfully';\n        snackbarTextFail = 'Contact details could not be updated';\n      }\n      url = url + \"/execute/\" + name\n      console.log(\"URL\", url)\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({ \"bindVars\": postData }),\n        success: function () {\n          self.handleSnackbar(snackbarTextSuccess);\n          self.resetModalData();\n        },\n        error: function (data) {\n          self.handleSnackbar(snackbarTextFail);\n          self.resetModalData();\n          console.log('Error:', data);\n        }\n      });\n\n    }\n    else {\n      //show error\n      this.setState({ ...validationObject });\n    }\n  }\n\n  onTextInputFocus(name) {\n    if (this.state[`${name}HasError`]) {\n      this.setState({ [`${name}HasError`]: false });\n    }\n  }\n\n  onEditPressed(element) {\n    if (element) {\n      //show edit modal\n      this.setState({ shouldShowModal: true, isEdit: true, lastEditElem: element });\n    }\n  }\n\n  onRemovePressed(element) {\n    const self = this;\n    let { baseUrl: url } = this.state;\n    url = url + \"/execute/Remove\"\n    let postData = `{\"_key\": \"${element._key}\"}`\n    if (element) {\n      this.setState({ lastEditElem: element }, () => {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url,\n          data: JSON.stringify({ \"bindVars\": JSON.parse(postData) }),\n          success: function () {\n            self.handleSnackbar(\"Contact details removed successfully\");\n            self.resetModalData();\n          },\n          error: function (data) {\n            self.handleSnackbar(\"Contact details could not be removed\");\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }\n\n  handleSnackbar(snackbarText) {\n    this.setState({ showSnackbar: true, snackbarText: snackbarText }, () => {\n      setTimeout(() => {\n        this.setState({ showSnackbar: false, snackbarText: '' });\n      }, 2000);\n    });\n  };\n\n  renderDialogContent() {\n    const { firstname, lastname, email } = (this.state.lastEditElem || {});\n    let dialogContent = (\n      <DialogContent>\n        <DialogContentText>\n          {this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'}\n        </DialogContentText>\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"firstName\")}\n          required={!this.state.isEdit}\n          error={this.state.firstNameHasError}\n          style={{ display: 'block' }}\n          label=\"First Name\"\n          value={this.state.isEdit ? firstname : this.state.firstName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.firstname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('firstName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"lastName\")}\n          required={!this.state.isEdit}\n          error={this.state.lastNameHasError}\n          style={{ display: 'block' }}\n          label=\"Last Name\"\n          value={this.state.isEdit ? lastname : this.state.lastName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.lastname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('lastName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"emailAddress\")}\n          required\n          error={this.state.emailAddressHasError}\n          style={{ display: 'block' }}\n          label=\"Email\"\n          value={this.state.isEdit ? email : this.state.emailAddress}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.email = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('emailAddress')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n      </DialogContent>\n    );\n    return dialogContent;\n  }\n\n  handleModalClose() {\n    const { selectedRegionUrl } = this.state;\n    this.setState({\n      regionModal: false,\n      baseUrl: getBaseUrl(selectedRegionUrl),\n      wsUrl: getWsUrl(selectedRegionUrl),\n      producerUrl: getProducerUrl(selectedRegionUrl)\n    }, () => {\n      this.login();\n    });\n  }\n\n  renderRegionModal() {\n    const { regionModal, availableRegions, selectedRegionUrl } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={regionModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Select Region:</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            onChange={event => {\n              const selectedRegionUrl = event.target.value;\n              const selectedRegionName = availableRegions.find(elem => elem.value === selectedRegionUrl).label;\n              this.setState({ selectedRegionUrl, selectedRegionName })\n            }\n            }\n            value={selectedRegionUrl}\n          >\n            {\n              availableRegions.map(region => <FormControlLabel key={region.label} value={region.value} control={<Radio />} label={region.label} />)\n            }\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={!selectedRegionUrl}\n            onClick={() => this.handleModalClose()}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  render() {\n    const { data, selectedRegionName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={c8dbLogo} alt=\"logo\" style={{ height: '100px' }} />\n          <h1 className=\"App-title\">Address book is connected to {selectedRegionName}</h1>\n        </header>\n        {this.renderRegionModal()}\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>KEY</TableCell>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell style={{ paddingLeft: '40px' }}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(n => {\n                return (\n                  <TableRow key={Math.random()}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n._key}\n                    </TableCell>\n                    <TableCell>{n.firstname}</TableCell>\n                    <TableCell>{n.lastname}</TableCell>\n                    <TableCell>{n.email}</TableCell>\n                    <TableCell>{\n                      <div>\n                        <Button\n                          onClick={() => { this.onEditPressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"primary\">\n                          <span style={{ fontSize: \"10px\" }}>Edit</span>\n                        </Button>\n                        <Button\n                          onClick={() => { this.onRemovePressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"secondary\">\n                          <span style={{ fontSize: \"10px\" }}>Remove</span>\n                        </Button>\n                      </div>\n                    }</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Fab\n          onClick={this.onFabPress}\n          style={{ position: 'fixed', bottom: '70px', right: '70px' }} size=\"large\" color=\"primary\">\n          <span style={{ fontSize: \"30px\" }}>+</span>\n        </Fab>\n        {/* add new contact dialog*/}\n        <Dialog\n          onClose={this.resetModalData}\n          open={this.state.shouldShowModal}\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.state.isEdit ? 'Edit contact details' : 'Add contact details'}</DialogTitle>\n          {this.renderDialogContent()}\n          <DialogActions>\n            <Button\n              onClick={() => { this.onSavePressed() }}\n              size=\"small\" variant=\"text\" color=\"primary\">\n              <span className=\"actions\">{this.state.isEdit ? 'UPDATE' : 'SAVE'}</span>\n            </Button>\n            <Button\n              onClick={this.resetModalData}\n              size=\"small\" variant=\"text\" color=\"secondary\">\n              <span className=\"actions\">DISCARD</span>\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={this.state.showSnackbar}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n        />\n        {\n          this.state.isLoading && <img src={spinner} alt=\"logo\" className=\"spinner\" />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}