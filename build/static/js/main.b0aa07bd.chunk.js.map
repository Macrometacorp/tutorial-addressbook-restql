{"version":3,"sources":["c8db-edition-edited.svg","circle_spinner.gif","Config.js","util.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Config","global","us","dublin","europe","getValidDataArray","data","res","JSON","parse","result","Array","isArray","deleteUtil","key","reduce","acc","elem","concat","Object","toConsumableArray","addOrUpdateUtil","payload","_key","firstname","lastname","email","found","arr","getWsUrl","url","Math","floor","random","getProducerUrl","makeRegionData","config","keys","obj","label","toUpperCase","value","push","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormChange","name","event","setState","defineProperty","target","state","shouldShowModal","showSnackbar","isEdit","snackbarText","firstName","lastName","emailAddress","firstNameHasError","lastNameHasError","emailAddressHasError","isLoading","lastEditElem","selectedRegionUrl","selectedRegionName","regionModal","availableRegions","baseUrl","wsUrl","producerUrl","onFabPress","bind","assertThisInitialized","onSavePressed","resetModalData","fetchData","onTextInputFocus","onSocketMessageReceived","connection","undefined","producer","jwtToken","close","_this2","$","ajax","method","stringify","tenant","username","password","dataType","success","jwt","ajaxSetup","initWebSocket","error","handleSnackbar","headers","Authorization","_this3","_this$state","WebSocket","onmessage","onopen","console","log","onerror","onclose","setInterval","send","message","receiveMsg","ackMsg","messageId","atob","_delete","deleteData","addOrUpdateData","isDialog","self","type","contentType","processData","cache","_this$state2","validationObject","trim","validate","length","snackbarTextSuccess","snackbarTextFail","postData","action","objectSpread","element","_this4","setTimeout","_this5","_ref","react_default","a","createElement","DialogContent_default","DialogContentText_default","TextField_default","onFocus","required","style","display","onChange","newLastEditElem","margin","_this6","login","_this7","_this$state3","Dialog_default","fullWidth","open","DialogTitle_default","id","RadioGroup_default","find","map","region","FormControlLabel_default","control","Radio_default","DialogActions_default","Button_default","disabled","onClick","handleModalClose","size","variant","color","className","_this8","_this$state4","src","c8dbLogo","alt","height","renderRegionModal","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","paddingLeft","TableBody_default","n","component","scope","onEditPressed","fontSize","onRemovePressed","Fab_default","position","bottom","right","onClose","renderDialogContent","Snackbar_default","handleClose","ContentProps","aria-describedby","spinner","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0aa07bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/c8db-edition-edited.393eb901.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle_spinner.25ef2804.gif\";","const Config = {\n    global: \"demo2.eng1.macrometa.io\",\n    us: \"demo2-asia-east1.eng1.macrometa.io\",\n    dublin: \"demo2-us-central1.eng1.macrometa.io\",\n    europe: \"demo2-europe-west2.eng1.macrometa.io\"\n};\n\nexport default Config;\n","export const getValidDataArray = (data) => {\n    const res = JSON.parse(data.result);\n    return Array.isArray(res) ? res : []\n};\n\nexport const getRandomInt = () => Math.floor(Math.random() * Math.floor(99999));\n\nexport const deleteUtil = (key, data) => {\n    const arr = data.reduce((acc, elem) => {\n        const accArray = (key === elem.key) ? acc : [...acc, elem];\n        return accArray;\n    }, []);\n    return arr;\n}\n\nexport const addOrUpdateUtil = (payload, data) => {\n    const { _key, firstname, lastname, email } = payload;\n    let found = false;\n    let arr = data.reduce((acc, elem) => {\n        found = found ? found : (_key === elem.key);\n        const accArr = (_key === elem.key) ? [...acc, { key: _key, firstname, lastname, email }] : [...acc, elem];\n        return accArr;\n    }, []);\n    arr = !found ? [...arr, { key: _key, firstname, lastname, email }] : arr;\n    return arr;\n}\n\nexport const getBaseUrl = url => `https://${url}/_tenant/demo/_fabric/addressbook/_fn/addressbook`;\n\nexport const getWsUrl = url => `wss://${url}/_ws/ws/v2/consumer/persistent/demo/c8local.addressbook/addresses/${getRandomInt()}`;\n\nexport const getProducerUrl = url => `wss://${url}/_ws/ws/v2/producer/persistent/demo/c8local.addressbook/addresses`;\n\nexport const makeRegionData = config => {\n    const keys = Object.keys(config);\n    const regionData = keys.reduce((acc, key) => {\n        const obj = { label: key.toUpperCase(), value: config[key] };\n        acc.push(obj);\n        return acc;\n    }, []);\n    return regionData;\n}","import React, { Component } from 'react';\nimport $ from 'jquery'\nimport c8dbLogo from './c8db-edition-edited.svg';\nimport spinner from './circle_spinner.gif';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Config from './Config.js';\n\nimport {\n  getValidDataArray,\n  deleteUtil,\n  addOrUpdateUtil,\n  getBaseUrl,\n  getWsUrl,\n  getProducerUrl,\n  makeRegionData\n} from \"./util\";\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: true,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: ''\n    };\n\n    this.onFabPress = this.onFabPress.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onSavePressed = this.onSavePressed.bind(this);\n    this.resetModalData = this.resetModalData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.onTextInputFocus = this.onTextInputFocus.bind(this);\n    this.onSocketMessageReceived = this.onSocketMessageReceived.bind(this);\n    this.connection = undefined;\n    this.producer = undefined;\n    this.jwtToken = undefined;\n  }\n\n  componentWillUnmount() {\n    this.connection.close();\n    this.producer.close();\n  }\n\n  login() {\n    const data = {\n      tenant: 'demo',\n      username: 'demouser',\n      password: 'demouser'\n    };\n\n    const url = `https://${this.state.selectedRegionUrl}/_tenant/_mm/_fabric/_system/_open/auth`;\n    $.ajax({\n      url,\n      method: 'POST',\n      data: JSON.stringify(data),\n      dataType: 'json',\n      success: (data) => {\n        this.jwtToken = data.jwt;\n        this.ajaxSetup();\n        this.initWebSocket();\n        this.fetchData();\n      },\n      error: () => this.handleSnackbar(\"Auth failed.\")\n    })\n  }\n\n  ajaxSetup() {\n    $.ajaxSetup({\n      headers: {\n        Authorization: `bearer ${this.jwtToken}`\n      }\n    });\n  }\n\n  initWebSocket() {\n    const { wsUrl, producerUrl } = this.state;\n    this.connection = new WebSocket(wsUrl);\n\n    this.connection.onmessage = this.onSocketMessageReceived;\n\n    this.connection.onopen = () => console.log(\"WS connection established\");\n\n    this.connection.onerror = () => console.log(\"Failed to establish WS connection\");\n\n    this.connection.onclose = () => console.log(\"Closing WS connection\");\n\n    this.producer = new WebSocket(producerUrl);\n\n    this.producer.onopen = () => {\n      setInterval(() => {\n        this.producer.send(JSON.stringify({ 'payload': 'noop' }))\n      }, 30000);\n    }\n\n  }\n\n  deleteData(key) {\n    this.setState({ data: deleteUtil(key, this.state.data) });\n  }\n\n  addOrUpdateData(payload) {\n    this.setState({ data: addOrUpdateUtil(payload, this.state.data) });\n  }\n\n  onSocketMessageReceived(message) {\n    var receiveMsg = JSON.parse(message.data);\n    const ackMsg = { \"messageId\": receiveMsg.messageId };\n    this.connection.send(JSON.stringify(ackMsg));\n    if (receiveMsg.payload !== 'noop') {\n      const payload = JSON.parse(atob(receiveMsg.payload));\n      payload._delete ? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n    }\n  }\n\n  fetchData(isDialog) {\n    var self = this;\n    const { baseUrl: url } = this.state;\n\n    this.setState({ isLoading: true }, () => {\n\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: '{\"action\":\"read\"}',\n        success: function (data) {\n          self.resetModalData();\n          self.setState({\n            isLoading: false,\n            data: getValidDataArray(data)\n          });\n        },\n        error: function (data) {\n          if (isDialog) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n          });\n          self.handleSnackbar(\"Could not fetch data\");\n          console.log('Error:', data);\n        }\n      });\n    });\n  }\n\n  onFabPress() {\n    this.setState({ shouldShowModal: true })\n  }\n\n  resetModalData() {\n    this.setState({\n      lastEditElem: undefined,\n      shouldShowModal: false,\n      isEdit: false,\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false\n    });\n  }\n\n  handleFormChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  validate() {\n    const { firstName, lastName, emailAddress } = this.state;\n    const validationObject = {};\n    if (!this.state.isEdit) {\n      if (!firstName.trim()) {\n        validationObject.firstNameHasError = true;\n      }\n      if (!lastName.trim()) {\n        validationObject.lastNameHasError = true;\n      }\n      if (!emailAddress.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n    else {\n      if (!this.state.lastEditElem.email.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n\n    return validationObject;\n  }\n\n  onSavePressed() {\n\n    const self = this;\n    const { baseUrl: url } = this.state;\n\n    const validationObject = this.validate();\n    if (Object.keys(validationObject).length === 0) {\n\n      let snackbarTextSuccess = 'Contact details added successfully';\n      let snackbarTextFail = 'Contact details could not be added';\n      let postData = { \"action\": \"create\", \"data\": { \"firstname\": this.state.firstName, \"lastname\": this.state.lastName, \"email\": this.state.emailAddress } }\n      if (this.state.isEdit) {\n        postData = { \"action\": \"update\", \"data\": { \"key\": this.state.lastEditElem.key, \"firstname\": this.state.lastEditElem.firstname, \"lastname\": this.state.lastEditElem.lastname, \"email\": this.state.lastEditElem.email } }\n        snackbarTextSuccess = 'Contact details updated successfully';\n        snackbarTextFail = 'Contact details could not be updated';\n      }\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify(postData),\n        success: function () {\n          self.handleSnackbar(snackbarTextSuccess);\n          self.resetModalData();\n        },\n        error: function (data) {\n          self.handleSnackbar(snackbarTextFail);\n          self.resetModalData();\n          console.log('Error:', data);\n        }\n      });\n\n    }\n    else {\n      //show error\n      this.setState({ ...validationObject });\n    }\n  }\n\n  onTextInputFocus(name) {\n    if (this.state[`${name}HasError`]) {\n      this.setState({ [`${name}HasError`]: false });\n    }\n  }\n\n  onEditPressed(element) {\n    if (element) {\n      //show edit modal\n      this.setState({ shouldShowModal: true, isEdit: true, lastEditElem: element });\n    }\n  }\n\n  onRemovePressed(element) {\n    const self = this;\n    const { baseUrl: url } = this.state;\n    if (element) {\n      this.setState({ lastEditElem: element }, () => {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url,\n          data: JSON.stringify({ \"action\": \"delete\", \"data\": { \"key\": element.key } }),\n          success: function () {\n            self.handleSnackbar(\"Contact details removed successfully\");\n            self.resetModalData();\n          },\n          error: function (data) {\n            self.handleSnackbar(\"Contact details could not be removed\");\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }\n\n  handleSnackbar(snackbarText) {\n    this.setState({ showSnackbar: true, snackbarText: snackbarText }, () => {\n      setTimeout(() => {\n        this.setState({ showSnackbar: false, snackbarText: '' });\n      }, 2000);\n    });\n  };\n\n  renderDialogContent() {\n    const { firstname, lastname, email } = (this.state.lastEditElem || {});\n    let dialogContent = (\n      <DialogContent>\n        <DialogContentText>\n          {this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'}\n        </DialogContentText>\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"firstName\")}\n          required={!this.state.isEdit}\n          error={this.state.firstNameHasError}\n          style={{ display: 'block' }}\n          label=\"First Name\"\n          value={this.state.isEdit ? firstname : this.state.firstName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.firstname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('firstName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"lastName\")}\n          required={!this.state.isEdit}\n          error={this.state.lastNameHasError}\n          style={{ display: 'block' }}\n          label=\"Last Name\"\n          value={this.state.isEdit ? lastname : this.state.lastName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.lastname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('lastName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"emailAddress\")}\n          required\n          error={this.state.emailAddressHasError}\n          style={{ display: 'block' }}\n          label=\"Email\"\n          value={this.state.isEdit ? email : this.state.emailAddress}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.email = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('emailAddress')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n      </DialogContent>\n    );\n    return dialogContent;\n  }\n\n  handleModalClose() {\n    const { selectedRegionUrl } = this.state;\n    this.setState({\n      regionModal: false,\n      baseUrl: getBaseUrl(selectedRegionUrl),\n      wsUrl: getWsUrl(selectedRegionUrl),\n      producerUrl: getProducerUrl(selectedRegionUrl)\n    }, () => {\n      this.login();\n    });\n  }\n\n  renderRegionModal() {\n    const { regionModal, availableRegions, selectedRegionUrl } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={regionModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Select Region:</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            onChange={event => {\n              const selectedRegionUrl = event.target.value;\n              const selectedRegionName = availableRegions.find(elem => elem.value === selectedRegionUrl).label;\n              this.setState({ selectedRegionUrl, selectedRegionName })\n            }\n            }\n            value={selectedRegionUrl}\n          >\n            {\n              availableRegions.map(region => <FormControlLabel key={region.label} value={region.value} control={<Radio />} label={region.label} />)\n            }\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={!selectedRegionUrl}\n            onClick={() => this.handleModalClose()}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  render() {\n    const { data, selectedRegionName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={c8dbLogo} alt=\"logo\" style={{ height: '100px' }} />\n          <h1 className=\"App-title\">Address book is connected to {selectedRegionName}</h1>\n        </header>\n        {this.renderRegionModal()}\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>KEY</TableCell>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell style={{ paddingLeft: '40px' }}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(n => {\n                return (\n                  <TableRow key={Math.random()}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n.key}\n                    </TableCell>\n                    <TableCell>{n.firstname}</TableCell>\n                    <TableCell>{n.lastname}</TableCell>\n                    <TableCell>{n.email}</TableCell>\n                    <TableCell>{\n                      <div>\n                        <Button\n                          onClick={() => { this.onEditPressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"primary\">\n                          <span style={{ fontSize: \"10px\" }}>Edit</span>\n                        </Button>\n                        <Button\n                          onClick={() => { this.onRemovePressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"secondary\">\n                          <span style={{ fontSize: \"10px\" }}>Remove</span>\n                        </Button>\n                      </div>\n                    }</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Fab\n          onClick={this.onFabPress}\n          style={{ position: 'fixed', bottom: '70px', right: '70px' }} size=\"large\" color=\"primary\">\n          <span style={{ fontSize: \"30px\" }}>+</span>\n        </Fab>\n        {/* add new contact dialog*/}\n        <Dialog\n          onClose={this.resetModalData}\n          open={this.state.shouldShowModal}\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.state.isEdit ? 'Edit contact details' : 'Add contact details'}</DialogTitle>\n          {this.renderDialogContent()}\n          <DialogActions>\n            <Button\n              onClick={() => { this.onSavePressed() }}\n              size=\"small\" variant=\"text\" color=\"primary\">\n              <span className=\"actions\">{this.state.isEdit ? 'UPDATE' : 'SAVE'}</span>\n            </Button>\n            <Button\n              onClick={this.resetModalData}\n              size=\"small\" variant=\"text\" color=\"secondary\">\n              <span className=\"actions\">DISCARD</span>\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={this.state.showSnackbar}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n        />\n        {\n          this.state.isLoading && <img src={spinner} alt=\"logo\" className=\"spinner\" />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}