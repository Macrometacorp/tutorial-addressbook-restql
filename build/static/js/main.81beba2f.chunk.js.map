{"version":3,"sources":["macrometa-white-transparent.png","circle_spinner.gif","Config.js","util.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Config","global","Dalles","Ashburn","Frankfurt","Mumbai","makeRegionData","config","Object","keys","reduce","acc","key","obj","label","split","labelPart","toUpperCase","value","push","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormChange","name","event","setState","defineProperty","target","state","shouldShowModal","showSnackbar","isEdit","snackbarText","firstName","lastName","emailAddress","firstNameHasError","lastNameHasError","emailAddressHasError","data","isLoading","lastEditElem","selectedRegionUrl","selectedRegionName","regionModal","availableRegions","baseUrl","wsUrl","producerUrl","loginModal","tenant","fabric","username","password","onFabPressed","bind","assertThisInitialized","onSavePressed","resetModalData","fetchData","onTextInputFocus","connection","undefined","producer","jwtToken","_this2","self","url","concat","$","ajax","method","JSON","stringify","dataType","success","jwt","ajaxSetup","saveQueries","collection","createCollection","when","done","r1","sleep","error","handleSnackbar","headers","Authorization","exist","type","contentType","processData","cache","collList","result","i","length","console","log","ms","resolve","Promise","setTimeout","readQuery","query","parameter","removeQuery","updateQuery","r2","r3","_this3","_this$state","WebSocket","onmessage","onSocketMessageReceived","onopen","onerror","onclose","setInterval","send","payload","isDialog","res","_this$state2","validationObject","email","trim","validate","snackbarTextSuccess","snackbarTextFail","_this$state3","postData","_this$state$lastEditE","_key","firstname","lastname","bindVars","objectSpread","element","parse","_this4","_this5","_ref","react_default","a","createElement","DialogContent_default","DialogContentText_default","TextField_default","onFocus","required","style","display","onChange","newLastEditElem","margin","_this6","login","_this7","_this$state4","Dialog_default","fullWidth","open","DialogTitle_default","id","RadioGroup_default","find","elem","map","region","FormControlLabel_default","control","Radio_default","DialogActions_default","Button_default","disabled","onClick","handleModalClose","size","variant","color","className","_this8","defaultValue","newtenant","newfabric","user","pass","_this9","_this$state5","src","c8dbLogo","alt","height","renderLoginModal","renderRegionModal","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","paddingLeft","TableBody_default","n","Math","random","component","scope","onEditPressed","fontSize","onRemovePressed","Fab_default","position","bottom","right","onClose","renderDialogContent","Snackbar_default","handleClose","ContentProps","aria-describedby","message","spinner","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81beba2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/macrometa-white-transparent.fe9af029.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_spinner.25ef2804.gif\";","const Config = {\n    global: \"try.macrometa.io\",\n    Dalles: \"try1-us-west1.prod.macrometa.io\",\n    Ashburn: \"try1-us-east4.prod.macrometa.io\",\n    Frankfurt: \"try1-europe-west3.prod.macrometa.io\",\n    Mumbai: \"try1-asia-south1.prod.macrometa.io\"\n}\n\n\nexport default Config;\n","    import _ from 'lodash';\n\nexport const getRandomInt = () => Math.floor(Math.random() * Math.floor(99999));\n\nexport const deleteUtil = (key, data) => {\n    const arr = data.reduce((acc, elem) => {\n        const accArray = (key === elem._key) ? acc : [...acc, elem];\n        return accArray;\n    }, []);\n    return arr;\n}\n\nexport const addOrUpdateUtil = (payload, data) => {\n    const { _key } = payload;\n    const newData = _.cloneDeep(data);\n    const index = data.findIndex(elem => elem._key === _key);\n    if (index === -1) {\n        newData.push(payload);\n    } else {\n        newData[index] = payload;\n    }\n    return newData;\n}\n\nexport const getBaseUrl = (url, tenant, fabric) => `https://${url}/_tenant/${tenant}/_fabric/${fabric}/restql`;\n\n//export const getWsUrl =(url, tenant, fabric) => `wss://${url}/_ws/ws/v2/consumer/persistent/${tenant}/c8local.${fabric}/addresses/${getRandomInt()}`;\n\n//export const getProducerUrl = (url, tenant, fabric) => `wss://${url}/_ws/ws/v2/producer/persistent/${tenant}/c8local.${fabric}/addresses`;\n\nexport const makeRegionData = config => {\n    const keys = Object.keys(config);\n    const regionData = keys.reduce((acc, key) => {\n        const label = key.split(\"_\").reduce((acc, labelPart) => {\n            return acc + labelPart.toUpperCase() + \" \";\n        }, \"\");\n        const obj = { label, value: config[key] };\n        acc.push(obj);\n        return acc;\n    }, []);\n    return regionData;\n}","import React, { Component } from 'react';\nimport $ from 'jquery'\nimport c8dbLogo from './macrometa-white-transparent.png';\nimport spinner from './circle_spinner.gif';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Config from './Config';\n\nimport {\n  //deleteUtil,\n  //addOrUpdateUtil,\n  getBaseUrl,\n  //getWsUrl,\n  //getProducerUrl,\n  makeRegionData\n} from \"./util\";\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: false,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: '',\n      loginModal: true,\n      tenant: 'demo',\n      fabric: '_system',\n      username: 'root',\n      password: 'demo'\n    };\n\n    this.onFabPressed = this.onFabPressed.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onSavePressed = this.onSavePressed.bind(this);\n    this.resetModalData = this.resetModalData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.onTextInputFocus = this.onTextInputFocus.bind(this);\n    //this.onSocketMessageReceived = this.onSocketMessageReceived.bind(this);\n    this.connection = undefined;\n    this.producer = undefined;\n    this.jwtToken = undefined;\n    this.fabric = undefined;\n  }\n\n\n  componentWillUnmount() {\n    //this.connection.close();\n    //this.producer.close();\n  }\n\n\n  login() {\n    /*const data = {\n      tenant: 'demo',\n      username: 'root',\n      password: 'demo'\n    }*/\n    const self = this;\n    const data = {\n      tenant: this.state.tenant,\n      username: this.state.username,\n      password: this.state.password\n\n    }\n    const url = `https://${this.state.selectedRegionUrl}/_tenant/${this.state.tenant}/_fabric/${this.state.fabric}/_open/auth`;\n    $.ajax({\n      url,\n      method: 'POST',\n      data: JSON.stringify(data),\n      dataType: 'json',\n      success: (data) => {\n        this.jwtToken = data.jwt;\n        this.ajaxSetup();\n        this.saveQueries();\n        var collection = this.createCollection();\n        $.when(collection).done(function (r1) {\n         self.sleep(3000);\n         self.fetchData();\n        });\n      },\n      error: () => this.handleSnackbar(\"Auth failed.\")\n    })\n  }\n\n  ajaxSetup() {\n    $.ajaxSetup({\n      headers: {\n        Authorization: `bearer ${this.jwtToken}`\n      }\n    });\n  }\n\n  createCollection() {\n    const self = this;\n    let exist = false;\n    let url = `https://${this.state.selectedRegionUrl}/_tenant/${this.state.tenant}/_fabric/${this.state.fabric}/collection`;\n     return $.ajax({\n      type: \"GET\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      success: function (data) {\n        let collList = data.result;\n        for (let i = 0; i < collList.length; i++) {\n          if (\"addresses\" === collList[i].name) {\n            exist = true;\n            console.log(\"Collection exists\");\n            break;\n          }\n          else {\n            exist = false;\n          }\n        }\n        if (exist === false) {\n          self.collection();\n        }\n      }\n    });\n\n  }\n\n  sleep(ms, resolve) {\n    return new Promise(() => setTimeout(resolve, ms));\n  }\n\n  collection() {\n    let url = `https://${this.state.selectedRegionUrl}/_tenant/${this.state.tenant}/_fabric/${this.state.fabric}/collection`;\n     $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify(\n        {\n          \"name\": \"addresses\",\n        }\n      ),\n      success: function (data) {\n        console.log(\"Collection Created\")\n      }\n    });\n  }\n\n  saveQueries() {\n\n    const { baseUrl: url } = this.state;\n    const self = this;\n\n    var readQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Read\",\n          \"parameter\": {},\n          \"value\": \"FOR entry IN addresses RETURN entry\"\n        }\n      })\n    });\n\n    /*var writeQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Write\",\n          \"parameter\": {},\n          \"value\": \"INSERT {firstname:@firstName,lastname:@lastName,email:@email} INTO addresses\"\n        }\n      })\n    });*/\n\n    var removeQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Remove\",\n          \"parameter\": {},\n          \"value\": \"REMOVE @_key IN addresses\"\n        }\n      }),\n      error: function (data) {\n        console.log('Error:', data);\n      }\n    });\n\n    var updateQuery = $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify({\n        \"query\": {\n          \"name\": \"Update\",\n          \"parameter\": {},\n          \"value\": \"UPDATE @_key WITH { firstname:@firstName, lastname:@lastName, email:@email} IN addresses\"\n        }\n      }\n      )\n    });\n\n    $.when(readQuery, updateQuery, removeQuery).done(function (r1, r2, r3) {\n      //self.initWebSocket();\n      self.fetchData();\n    });\n\n  }\n\n  initWebSocket() {\n    const { wsUrl, producerUrl } = this.state;\n    this.connection = new WebSocket(wsUrl);\n\n    this.connection.onmessage = this.onSocketMessageReceived;\n\n    this.connection.onopen = () => console.log(\"WS connection established\");\n\n    this.connection.onerror = () => console.log(\"Failed to establish WS connection\");\n\n    this.connection.onclose = () => console.log(\"Closing WS connection\");\n    \n    this.producer = new WebSocket(producerUrl);\n\n    this.producer.onopen = () => {\n      setInterval(() => {\n        this.producer.send(JSON.stringify({ 'payload': 'noop' }))\n      }, 30000);\n    }\n\n  }\n\n  /*\n  deleteData(key) {\n    this.setState({ data: deleteUtil(key, this.state.data) });\n  }\n\n  addOrUpdateData(payload) {\n    this.setState({ data: addOrUpdateUtil(payload, this.state.data) });\n  }*/\n/*\n  onSocketMessageReceived(message) {\n    var receiveMsg = JSON.parse(message.data);\n    const ackMsg = { \"messageId\": receiveMsg.messageId };\n    this.connection.send(JSON.stringify(ackMsg));\n    if (receiveMsg.payload !== 'noop') {\n      const payload = JSON.parse(atob(receiveMsg.payload));\n      payload._delete ? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n    }\n  }*/\n\n  fetchData(isDialog) {\n    var self = this;\n    let { baseUrl: url } = this.state;\n    url = url + \"/execute/Read\"\n    this.setState({ isLoading: false }, () => {\n      return $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({}),\n        success: function (data) {\n          // self.resetModalData();\n          self.setState({\n            isLoading: false,\n            data: data.result\n          });\n          var res = self.fetchData();\n          $.when(res).done(function (r1) {\n            self.sleep(10000);\n          });\n      \n\n        },\n        error: function (data) {\n          if (isDialog) {\n            // self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n          });\n          self.handleSnackbar(\"Could not fetch data\");\n          console.log('Error:', data);\n        }\n      });\n    });\n  }\n\n  onFabPressed() {\n    this.setState({ shouldShowModal: true })\n  }\n\n  resetModalData() {\n    console.log(this.state.shouldShowModal);\n    \n    this.setState({\n      lastEditElem: undefined,\n      shouldShowModal: false,\n      isEdit: false,\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false\n    });\n  }\n\n  handleFormChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  validate() {\n    const { firstName, lastName, emailAddress } = this.state;\n    const validationObject = {};\n    if (!this.state.isEdit) {\n      if (!firstName.trim()) {\n        validationObject.firstNameHasError = true;\n      }\n      if (!lastName.trim()) {\n        validationObject.lastNameHasError = true;\n      }\n      if (!emailAddress.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n    else {\n      if (!this.state.lastEditElem.email.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n\n    return validationObject;\n  }\n\n  onSavePressed() {\n\n    const self = this;\n    let { baseUrl: url } = this.state;\n    const validationObject = this.validate();\n    if (Object.keys(validationObject).length === 0) {\n\n      let snackbarTextSuccess = 'Contact details added successfully';\n      let snackbarTextFail = 'Contact details could not be added';\n      const { firstName, lastName, emailAddress, isEdit } = this.state;\n      let name = \"Write\";\n      let postData = `INSERT { \"firstname\":\"${firstName}\", \"lastname\":\"${lastName}\", \"email\":\"${emailAddress}\" } INTO addresses`;\n      let data = JSON.stringify({ \"query\": postData })\n      //let postData = { \"firstName\": firstName, \"lastName\": lastName, \"email\": emailAddress };\n      if (isEdit) {\n        name = \"Update\";\n        url = url + \"/execute/\" + name\n        const { lastEditElem: { _key, firstname, lastname, email } } = this.state;\n        postData = { \"_key\": _key, \"firstName\": firstname, \"lastName\": lastname, \"email\": email };\n        data = JSON.stringify({ \"bindVars\": postData })\n        snackbarTextSuccess = 'Contact details updated successfully';\n        snackbarTextFail = 'Contact details could not be updated';\n      }\n      else {\n        url = `https://${this.state.selectedRegionUrl}/_tenant/${this.state.tenant}/_fabric/${this.state.fabric}/cursor`;\n      }\n      console.log(\"URL\", url)\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: data,\n        success: function () {\n          self.handleSnackbar(snackbarTextSuccess);\n          self.resetModalData();\n          self.fetchData();\n        },\n        error: function (data) {\n          self.handleSnackbar(snackbarTextFail);\n          self.resetModalData();\n          console.log('Error:', data);\n        }\n      });\n\n    }\n    else {\n      //show error\n      this.setState({ ...validationObject });\n    }\n  }\n\n  onTextInputFocus(name) {\n    if (this.state[`${name}HasError`]) {\n      this.setState({ [`${name}HasError`]: false });\n    }\n  }\n\n  onEditPressed(element) {\n    if (element) {\n      //show edit modal\n      this.setState({ shouldShowModal: true, isEdit: true, lastEditElem: element });\n    }\n  }\n\n  onRemovePressed(element) {\n    const self = this;\n    let { baseUrl: url } = this.state;\n    url = url + \"/execute/Remove\"\n    let postData = `{\"_key\": \"${element._key}\"}`\n    if (element) {\n      this.setState({ lastEditElem: element }, () => {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url,\n          data: JSON.stringify({ \"bindVars\": JSON.parse(postData) }),\n          success: function () {\n            self.handleSnackbar(\"Contact details removed successfully\");\n            self.resetModalData();\n            self.fetchData();\n          },\n          error: function (data) {\n            self.handleSnackbar(\"Contact details could not be removed\");\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }\n\n  handleSnackbar(snackbarText) {\n    this.setState({ showSnackbar: true, snackbarText: snackbarText }, () => {\n      setTimeout(() => {\n        this.setState({ showSnackbar: false, snackbarText: '' });\n      }, 2000);\n    });\n  };\n\n\n  renderDialogContent() {\n    const { firstname, lastname, email } = (this.state.lastEditElem || {});\n    let dialogContent = (\n      <DialogContent>\n        <DialogContentText>\n          {this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'}\n        </DialogContentText>\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"firstName\")}\n          required={!this.state.isEdit}\n          error={this.state.firstNameHasError}\n          style={{ display: 'block' }}\n          label=\"First Name\"\n          value={this.state.isEdit ? firstname : this.state.firstName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.firstname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('firstName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"lastName\")}\n          required={!this.state.isEdit}\n          error={this.state.lastNameHasError}\n          style={{ display: 'block' }}\n          label=\"Last Name\"\n          value={this.state.isEdit ? lastname : this.state.lastName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.lastname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('lastName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"emailAddress\")}\n          required\n          error={this.state.emailAddressHasError}\n          style={{ display: 'block' }}\n          label=\"Email\"\n          value={this.state.isEdit ? email : this.state.emailAddress}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.email = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('emailAddress')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n      </DialogContent>\n    );\n    return dialogContent;\n  }\n\n  handleModalClose() {\n    const { selectedRegionUrl } = this.state;\n    this.setState({\n      regionModal: false,\n      baseUrl: getBaseUrl(selectedRegionUrl, this.state.tenant, this.state.fabric),\n      //wsUrl: getWsUrl(selectedRegionUrl, this.state.tenant, this.state.fabric),\n      //producerUrl: getProducerUrl(selectedRegionUrl, this.state.tenant, this.state.fabric)\n    }, () => {\n      this.login();\n    });\n  }\n\n  renderRegionModal() {\n    const { regionModal, availableRegions, selectedRegionUrl } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={regionModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Select Region:</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            onChange={event => {\n              const selectedRegionUrl = event.target.value;\n              const selectedRegionName = availableRegions.find(elem => elem.value === selectedRegionUrl).label;\n              this.setState({ selectedRegionUrl, selectedRegionName })\n            }\n            }\n            value={selectedRegionUrl}\n          >\n            {\n              availableRegions.map(region => <FormControlLabel key={region.label} value={region.value} control={<Radio />} label={region.label} />)\n            }\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={!selectedRegionUrl}\n            onClick={() => this.handleModalClose()}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  renderLoginModal() {\n    let { loginModal } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={loginModal}\n      >\n        <DialogTitle id=\"form-dialog-title\"> Enter Tenant and Fabric:</DialogTitle>\n        <DialogContent>\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"tenant\")}\n            style={{ display: 'block' }}\n            label=\"Tenant\"\n            defaultValue = {this.state.tenant}\n            onChange={(event) => {\n              const newtenant = event.target.value;\n              this.setState({ tenant: newtenant });\n            }}\n            margin=\"normal\"\n          />\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"fabric\")}\n            style={{ display: 'block' }}\n            label=\"Fabric \"\n            defaultValue = {this.state.fabric}\n            onChange={(event) => {\n              const newfabric = event.target.value;\n              this.setState({ fabric: newfabric });\n\n            }}\n            margin=\"normal\"\n          />\n\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"username\")}\n            style={{ display: 'block' }}\n            label=\"User \"\n            defaultValue = {this.state.username}\n            onChange={(event) => {\n              const user = event.target.value;\n              this.setState({ username: user });\n\n            }}\n            margin=\"normal\"\n          />\n\n          <TextField type='password'\n\n            onFocus={() => this.onTextInputFocus(\"password\")}\n            style={{ display: 'block' }}\n            label=\"Password \"\n            defaultValue = {this.state.password}\n            onChange={(event) => {\n              const pass = event.target.value;\n              this.setState({ password: pass });\n\n            }}\n            margin=\"normal\"\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            onClick={() => this.setState({\n              loginModal: false,\n              regionModal: true\n            })}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n\n  render() {\n    const { data, selectedRegionName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={c8dbLogo} alt=\"logo\" style={{ height: '100px' }} />\n          <h1 className=\"App-title\">Address book is connected to {selectedRegionName}</h1>\n        </header>\n        {this.renderLoginModal()}\n        {this.renderRegionModal()}\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>KEY</TableCell>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell style={{ paddingLeft: '40px' }}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(n => {\n                return (\n                  <TableRow key={Math.random()}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n._key}\n                    </TableCell>\n                    <TableCell>{n.firstname}</TableCell>\n                    <TableCell>{n.lastname}</TableCell>\n                    <TableCell>{n.email}</TableCell>\n                    <TableCell>{\n                      <div>\n                        <Button\n                          onClick={() => { this.onEditPressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"primary\">\n                          <span style={{ fontSize: \"10px\" }}>Edit</span>\n                        </Button>\n                        <Button\n                          onClick={() => { this.onRemovePressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"secondary\">\n                          <span style={{ fontSize: \"10px\" }}>Remove</span>\n                        </Button>\n                      </div>\n                    }</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Fab\n          onClick={this.onFabPressed}\n          style={{ position: 'fixed', bottom: '70px', right: '70px' }} size=\"large\" color=\"primary\">\n          <span style={{ fontSize: \"30px\" }}>+</span>\n        </Fab>\n        {/* add new contact dialog*/}\n        <Dialog\n          onClose={this.resetModalData}\n          open={this.state.shouldShowModal}\n          \n        >\n\n          <h1>{ this.state.shouldShowModal }</h1>\n          <DialogTitle id=\"form-dialog-title\">{this.state.isEdit ? 'Edit contact details' : 'Add contact details'}</DialogTitle>\n          {this.renderDialogContent()}\n          <DialogActions>\n            <Button\n              onClick={() => { this.onSavePressed() }}\n              size=\"small\" variant=\"text\" color=\"primary\">\n              <span className=\"actions\">{this.state.isEdit ? 'UPDATE' : 'SAVE'}</span>\n            </Button>\n            <Button\n              onClick={this.resetModalData}\n              size=\"small\" variant=\"text\" color=\"secondary\">\n              <span className=\"actions\">DISCARD</span>\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={this.state.showSnackbar}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n        />\n        {\n          this.state.isLoading && <img src={spinner} alt=\"logo\" className=\"spinner\" />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}